# modules/handlers/admin.py

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, CallbackQueryHandler, MessageHandler, filters, Application
from modules.keyboards import admin_panel_kb, client_menu, nav_buttons
from modules.callbacks import CB
from modules.states import STEP_MENU, STEP_ADMIN_SEARCH, STEP_ADMIN_BROADCAST
from modules.db import authorize_card, search_user, broadcast_to_all

# ‚îÄ‚îÄ‚îÄ 1) –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∫–∞—Ä—Ç–∫–∏ –∫–ª—ñ—î–Ω—Ç–∞ (callback_data = "admin_confirm_card:<user_id>:<card>") ‚îÄ‚îÄ‚îÄ
async def admin_confirm_card(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.callback_query.answer()

    # callback_data —Ñ–æ—Ä–º–∞—Ç: "admin_confirm_card:<user_id>:<card>"
    _, user_id_str, card = update.callback_query.data.split(":", 2)
    user_id = int(user_id_str)

    # 1) –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ –ë–î (authorize_card –æ–Ω–æ–≤–ª—é—î –∞–±–æ —Å—Ç–≤–æ—Ä—é—î –∑–∞–ø–∏—Å —É clients)
    authorize_card(user_id, card)

    # 2) –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –∫–ª—ñ—î–Ω—Ç–∞ –ø—Ä–æ —É—Å–ø—ñ—à–Ω—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é
    await context.bot.send_message(
        chat_id=user_id,
        text=f"üéâ –í–∞—à–∞ –∫–∞—Ä—Ç–∫–∞ {card} –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∞. –í–∏ —É—Å–ø—ñ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ.",
        reply_markup=client_menu(is_authorized=True)
    )

    # 3) –û–Ω–æ–≤–ª—é—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—É –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ —É—Å–ø—ñ—Ö
    await update.callback_query.message.edit_text(
        f"‚úÖ –ö–∞—Ä—Ç–∫–∞ {card} –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id} –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∞."
    )

# ‚îÄ‚îÄ‚îÄ 2) –ü–æ–∫–∞–∑—É—î–º–æ –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å (–Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è ¬´üõ† –ê–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å¬ª) ‚îÄ‚îÄ‚îÄ
async def show_admin_panel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.callback_query.answer()
    await update.callback_query.message.reply_text(
        "üõ† –ê–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å:", 
        reply_markup=admin_panel_kb()
    )
    return STEP_ADMIN_SEARCH

# ‚îÄ‚îÄ‚îÄ 3) –ü–æ—á–∞—Ç–æ–∫ —Å—Ü–µ–Ω–∞—Ä—ñ—é ¬´–ü–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç–∞¬ª (–Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è ¬´üîç –ü–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç–∞¬ª) ‚îÄ‚îÄ‚îÄ
async def admin_search(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ê–¥–º—ñ–Ω –Ω–∞—Ç–∏—Å–Ω—É–≤ ¬´üîç –ü–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç–∞¬ª. 
    –ü—Ä–æ—Å–∏–º–æ –≤–≤–µ—Å—Ç–∏ ID –∞–±–æ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç–∫–∏.
    """
    await update.callback_query.answer()
    await update.callback_query.message.reply_text(
        "üîç –í–≤–µ–¥—ñ—Ç—å ID –∞–±–æ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç–∫–∏ –¥–ª—è –ø–æ—à—É–∫—É:",
        reply_markup=nav_buttons()
    )
    return STEP_ADMIN_BROADCAST  # –ø—ñ—Å–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –ø–µ—Ä–µ—Ö–æ–¥–∏–º–æ —É admin_broadcast

# ‚îÄ‚îÄ‚îÄ 4) –û–±—Ä–æ–±–∫–∞ —Ç–µ–∫—Å—Ç—É —É —Å—Ü–µ–Ω–∞—Ä—ñ—ó ¬´–ü–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç–∞¬ª ‚îÄ‚îÄ‚îÄ
async def admin_search_result(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ü—ñ—Å–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è ID –∞–±–æ –∫–∞—Ä—Ç–∫–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä –æ—Ç—Ä–∏–º—É—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ—à—É–∫—É:
    –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ search_user(query).
    """
    query = update.message.text.strip()
    user = search_user(query)

    if user:
        text = (
            f"üë§ –ó–Ω–∞–π–¥–µ–Ω–æ –∫–ª—ñ—î–Ω—Ç–∞:\n"
            f"‚Ä¢ user_id: {user['user_id']}\n"
            f"‚Ä¢ card: {user['card']}\n"
            f"‚Ä¢ phone: {user['phone'] or '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}"
        )
    else:
        text = "‚ùå –ö–ª—ñ—î–Ω—Ç–∞ –∑ —Ç–∞–∫–∏–º ID –∞–±–æ –∫–∞—Ä—Ç–∫–æ—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ."

    await update.message.reply_text(text, reply_markup=nav_buttons())
    return STEP_MENU

# ‚îÄ‚îÄ‚îÄ 5) –°—Ü–µ–Ω–∞—Ä—ñ–π ¬´–†–æ–∑—Å–∏–ª–∫–∞¬ª (–Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è ¬´üì¢ –†–æ–∑—Å–∏–ª–∫–∞¬ª) ‚îÄ‚îÄ‚îÄ
async def admin_broadcast(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ê–¥–º—ñ–Ω –Ω–∞—Ç–∏—Å–Ω—É–≤ ¬´üì¢ –†–æ–∑—Å–∏–ª–∫–∞¬ª ‚Üí –ø–∏—Ç–∞—î–º–æ —Ç–µ–∫—Å—Ç ‚Üí
    –∫–æ–ª–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä –≤–≤–æ–¥–∏—Ç—å —Ç–µ–∫—Å—Ç, –≤–∏–∫–ª–∏–∫–∞—î–º–æ broadcast_to_all.
    """
    if update.callback_query:
        # —Ü–µ –±—É–≤ CallbackQuery ‚Äì –º–∏ –≤—ñ–¥–ø–æ–≤—ñ–ª–∏ –Ω–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è ¬´üì¢ –†–æ–∑—Å–∏–ª–∫–∞¬ª
        await update.callback_query.answer()
        await update.callback_query.message.reply_text(
            "üì¢ –í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–æ–∑—Å–∏–ª–∫–∏ –≤—Å—ñ–º –∫–ª—ñ—î–Ω—Ç–∞–º:",
            reply_markup=nav_buttons()
        )
        return STEP_ADMIN_BROADCAST

    # –Ø–∫—â–æ —Ü–µ Message (–∞–¥–º—ñ–Ω –≤–≤–æ–¥–∏—Ç—å —Å–∞–º —Ç–µ–∫—Å—Ç —Ä–æ–∑—Å–∏–ª–∫–∏)
    text_to_send = update.message.text.strip()
    broadcast_to_all(text_to_send)
    await update.message.reply_text(
        "‚úÖ –†–æ–∑—Å–∏–ª–∫–∞ —É—Å–ø—ñ—à–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–∞ –≤—Å—ñ–º –∫–ª—ñ—î–Ω—Ç–∞–º.",
        reply_markup=nav_buttons()
    )
    return STEP_MENU

def register_admin_handlers(app: Application) -> None:
    """
    –†–µ–≥—ñ—Å—Ç—Ä—É—î–º–æ –≤—Å—ñ –∞–¥–º—ñ–Ω—Å—å–∫—ñ —Ö–µ–Ω–¥–ª–µ—Ä–∏:
     1) admin_confirm_card  (callback_data="admin_confirm_card:<user_id>:<card>")
     2) show_admin_panel    (callback_data="admin_panel")
     3) admin_search        (callback_data="admin_search")
     4) admin_search_result (—Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ—à—É–∫—É ‚Äî MessageHandler)
     5) admin_broadcast     (callback_data="admin_broadcast" + MessageHandler)
    """
    # 1) –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∫–∞—Ä—Ç–∫–∏ –∫–ª—ñ—î–Ω—Ç–∞
    app.add_handler(
        CallbackQueryHandler(admin_confirm_card, pattern=r"^admin_confirm_card:\d+:.+"),
        group=0
    )

    # 2) –ö–Ω–æ–ø–∫–∞ ¬´üõ† –ê–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å¬ª
    app.add_handler(
        CallbackQueryHandler(show_admin_panel, pattern=f"^{CB.ADMIN_PANEL.value}$"),
        group=0
    )

    # 3) ¬´üîç –ü–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç–∞¬ª (–ø–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ –≤–≤–æ–¥—É —Ç–µ–∫—Å—Ç—É)
    app.add_handler(
        CallbackQueryHandler(admin_search, pattern=f"^{CB.ADMIN_SEARCH.value}$"),
        group=0
    )
    # 4) –û–±—Ä–æ–±–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –ø–æ—à—É–∫—É (MessageHandler)
    app.add_handler(
        MessageHandler(filters.TEXT & ~filters.COMMAND, admin_search_result),
        group=0
    )

    # 5) ¬´üì¢ –†–æ–∑—Å–∏–ª–∫–∞¬ª (CallbackQueryHandler ‚Üí MessageHandler)
    app.add_handler(
        CallbackQueryHandler(admin_broadcast, pattern=f"^{CB.ADMIN_BROADCAST.value}$"),
        group=0
    )
    app.add_handler(
        MessageHandler(filters.TEXT & ~filters.COMMAND, admin_broadcast),
        group=0
    )
