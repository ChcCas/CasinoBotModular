# modules/handlers/admin.py

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, CallbackQueryHandler, MessageHandler, filters, Application
from modules.keyboards import admin_panel_kb, client_menu, nav_buttons
from modules.callbacks import CB
from modules.states import STEP_MENU, STEP_ADMIN_SEARCH, STEP_ADMIN_BROADCAST
from modules.db import authorize_card, search_user, broadcast_to_all

async def admin_confirm_card(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    CallbackQueryHandler –¥–ª—è ‚Äúadmin_confirm_card:<user_id>:<card>‚Äù.
    –ê–¥–º—ñ–Ω –Ω–∞—Ç–∏—Å–Ω—É–≤ ‚Äú–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∫–∞—Ä—Ç–∫—É‚Äù.
    1) –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∫–∞—Ä—Ç–∫—É —É —Ç–∞–±–ª–∏—Ü—é clients.
    2) –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –∫–ª—ñ—î–Ω—Ç–∞ –ø—Ä–æ —É—Å–ø—ñ—Ö (—Ç–∞ –ø–æ–∫–∞–∑—É—î–º–æ –∫–ª—ñ—î–Ω—Ç—Å—å–∫–µ –º–µ–Ω—é —ñ–∑ is_authorized=True).
    3) –û–Ω–æ–≤–ª—é—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—É, —â–æ –æ–ø–µ—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞.
    """
    await update.callback_query.answer()

    # –†–æ–∑–±–∏—Ä–∞—î–º–æ callback_data
    _, user_id_str, card = update.callback_query.data.split(":", 2)
    user_id = int(user_id_str)

    # 1) –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ –ë–î
    authorize_card(user_id, card)

    # 2) –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –∫–ª—ñ—î–Ω—Ç–∞, —â–æ –π–æ–≥–æ –∫–∞—Ä—Ç–∫—É –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ
    await context.bot.send_message(
        chat_id=user_id,
        text=f"üéâ –í–∞—à–∞ –∫–∞—Ä—Ç–∫–∞ {card} –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∞. –í–∏ —É—Å–ø—ñ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ.",
        reply_markup=client_menu(is_authorized=True)
    )

    # 3) –û–Ω–æ–≤–ª—é—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—É
    await update.callback_query.message.edit_text(
        f"‚úÖ –ö–∞—Ä—Ç–∫–∞ {card} –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id} –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∞."
    )
    return

async def show_admin_panel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    CallbackQueryHandler –¥–ª—è ‚Äúadmin_panel‚Äù (–Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è ‚Äúüõ† –ê–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å‚Äù).
    –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å.
    """
    await update.callback_query.answer()

    text = "üõ† –ê–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å:"
    sent = await update.callback_query.message.reply_text(
        text,
        reply_markup=admin_panel_kb()
    )
    context.user_data["base_msg_id"] = sent.message_id
    return STEP_ADMIN_SEARCH

async def admin_search(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    CallbackQueryHandler –¥–ª—è ‚Äúadmin_search‚Äù (–Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è ‚Äúüîç –ü–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç–∞‚Äù).
    –ó–∞–ø–∏—Ç—É—î–º–æ ID –∞–±–æ –∫–∞—Ä—Ç–∫—É. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ç–µ —Å–∞–º–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (—Ä–µ–¥–∞–≥—É—î–º–æ).
    """
    await update.callback_query.answer()

    base_id = context.user_data.get("base_msg_id")
    if base_id:
        await context.bot.edit_message_text(
            chat_id=update.effective_chat.id,
            message_id=base_id,
            text="üîç –í–≤–µ–¥—ñ—Ç—å ID –∞–±–æ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç–∫–∏ –¥–ª—è –ø–æ—à—É–∫—É:",
            reply_markup=nav_buttons()
        )
    return STEP_ADMIN_BROADCAST  # –¥–∞–ª—ñ –ª–æ–≤–∏—Ç—å—Å—è —è–∫ MessageHandler

async def admin_search_result(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    MessageHandler, —è–∫–∏–π —Å–ø—Ä–∞—Ü—å–æ–≤—É—î –ø—ñ—Å–ª—è —Ç–æ–≥–æ, —è–∫ –∞–¥–ºi–Ω –≤–≤—ñ–≤ ID/–Ω–æ–º–µ—Ä –∫–∞—Ä—Ç–∫–∏.
    –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ search_user(query) –¥–ª—è –ø–æ—à—É–∫—É.
    –ü–æ—Ç—ñ–º —Ä–µ–¥–∞–≥—É—î–º–æ —Ç–µ —Å–∞–º–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –ø–æ–∫–∞–∑—É—é—á–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
    """
    query = update.message.text.strip()
    user = search_user(query)

    if user:
        text = (
            f"üë§ –ó–Ω–∞–π–¥–µ–Ω–æ –∫–ª—ñ—î–Ω—Ç–∞:\n"
            f"‚Ä¢ user_id: {user['user_id']}\n"
            f"‚Ä¢ card: {user['card']}\n"
            f"‚Ä¢ phone: {user['phone'] or '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}"
        )
    else:
        text = "‚ùå –ö–ª—ñ—î–Ω—Ç–∞ –∑ —Ç–∞–∫–∏–º ID –∞–±–æ –∫–∞—Ä—Ç–∫–æ—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ."

    base_id = context.user_data.get("base_msg_id")
    if base_id:
        await context.bot.edit_message_text(
            chat_id=update.effective_chat.id,
            message_id=base_id,
            text=text,
            reply_markup=nav_buttons()
        )
    return STEP_MENU

async def admin_broadcast(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    1) –Ø–∫—â–æ CallbackQuery (–∫–Ω–æ–ø–∫–∞ ‚Äúüì¢ –†–æ–∑—Å–∏–ª–∫–∞‚Äù), —Ç–æ –ø—Ä–æ—Å–∏–º–æ –≤–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç.
    2) –Ø–∫—â–æ Message (–∞–¥–º—ñ–Ω –≤–≤—ñ–≤ —Ç–µ–∫—Å—Ç), –≤–∏–∫–æ–Ω—É—î–º–æ broadcast_to_all —ñ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—å –¥–æ –º–µ–Ω—é.
    """
    # –Ø–∫—â–æ —Ü–µ –±—É–≤ CallbackQueryHandler (–Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è ‚Äúüì¢ –†–æ–∑—Å–∏–ª–∫–∞‚Äù)
    if update.callback_query:
        await update.callback_query.answer()
        base_id = context.user_data.get("base_msg_id")
        if base_id:
            await context.bot.edit_message_text(
                chat_id=update.effective_chat.id,
                message_id=base_id,
                text="üì¢ –í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–æ–∑—Å–∏–ª–∫–∏ –≤—Å—ñ–º –∫–ª—ñ—î–Ω—Ç–∞–º:",
                reply_markup=nav_buttons()
            )
        return STEP_ADMIN_BROADCAST

    # –Ø–∫—â–æ —Ü–µ MessageHandler (–∞–¥–º—ñ–Ω –≤–≤–æ–¥–∏—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–æ–∑—Å–∏–ª–∫–∏)
    text_to_send = update.message.text.strip()
    broadcast_to_all(text_to_send)

    base_id = context.user_data.get("base_msg_id")
    if base_id:
        await context.bot.edit_message_text(
            chat_id=update.effective_chat.id,
            message_id=base_id,
            text="‚úÖ –†–æ–∑—Å–∏–ª–∫–∞ —É—Å–ø—ñ—à–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–∞ –≤—Å—ñ–º –∫–ª—ñ—î–Ω—Ç–∞–º.",
            reply_markup=nav_buttons()
        )
    return STEP_MENU

def register_admin_handlers(app: Application) -> None:
    """
    –†–µ–≥—ñ—Å—Ç—Ä—É—î–º–æ –≤—Å—ñ –∞–¥–º—ñ–Ω—Å—å–∫—ñ —Ö–µ–Ω–¥–ª–µ—Ä–∏ (—É –≥—Ä—É–ø—ñ 0):
     1) admin_confirm_card
     2) show_admin_panel
     3) admin_search
     4) admin_search_result
     5) admin_broadcast (—ñ —á–µ—Ä–µ–∑ CallbackQueryHandler, —ñ —á–µ—Ä–µ–∑ MessageHandler)
    """
    # 1) –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∫–∞—Ä—Ç–∫–∏ –∫–ª—ñ—î–Ω—Ç–∞ (–Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è ‚Äú‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∫–∞—Ä—Ç–∫—É‚Äù)
    app.add_handler(
        CallbackQueryHandler(admin_confirm_card, pattern=r"^admin_confirm_card:\d+:.+"),
        group=0
    )

    # 2) –ö–Ω–æ–ø–∫–∞ ‚Äúüõ† –ê–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å‚Äù
    from modules.callbacks import CB
    app.add_handler(
        CallbackQueryHandler(show_admin_panel, pattern=f"^admin_panel$"),
        group=0
    )

    # 3) ‚Äúüîç –ü–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç–∞‚Äù (CallbackQuery ‚Üí –ø–æ—Ç—ñ–º –∞–¥–º—ñ–Ω –≤–≤–æ–¥–∏—Ç—å —Ç–µ–∫—Å—Ç)
    app.add_handler(
        CallbackQueryHandler(admin_search, pattern=f"^{CB.ADMIN_SEARCH.value}$"),
        group=0
    )
    # 4) –û–±—Ä–æ–±–∫–∞ —Ç–µ–∫—Å—Ç—É –ø—ñ—Å–ª—è ‚Äú–ü–æ—à—É–∫‚Äù (MessageHandler)
    app.add_handler(
        MessageHandler(filters.TEXT & ~filters.COMMAND, admin_search_result),
        group=0
    )

    # 5) ‚Äúüì¢ –†–æ–∑—Å–∏–ª–∫–∞‚Äù (CallbackQuery + MessageHandler)
    app.add_handler(
        CallbackQueryHandler(admin_broadcast, pattern=f"^{CB.ADMIN_BROADCAST.value}$"),
        group=0
    )
    app.add_handler(
        MessageHandler(filters.TEXT & ~filters.COMMAND, admin_broadcast),
        group=0
    )
