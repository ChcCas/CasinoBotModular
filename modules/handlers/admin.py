# modules/handlers/admin.py

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.error import BadRequest
from telegram.ext import ContextTypes, CallbackQueryHandler, MessageHandler, filters, Application
from modules.config import ADMIN_ID
from modules.db import authorize_card, search_user, broadcast_to_all
from modules.keyboards import client_menu, nav_buttons, admin_panel_kb
from modules.callbacks import CB
from modules.states import STEP_MENU, STEP_ADMIN_SEARCH, STEP_ADMIN_BROADCAST

async def admin_confirm_card(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–æ–±–ª—è—î callback_data = "admin_confirm_card:<user_id>:<card>".
    1) –ó–±–µ—Ä—ñ–≥–∞—î –∫–∞—Ä—Ç–∫—É —É –±–∞–∑—ñ —á–µ—Ä–µ–∑ authorize_card(...)
    2) –ü–æ–≤—ñ–¥–æ–º–ª—è—î –∫–ª—ñ—î–Ω—Ç–∞, —â–æ –π–æ–≥–æ –∫–∞—Ä—Ç–∫–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∞, —Ç–∞ –ø–æ–∫–∞–∑—É—î client_menu(is_authorized=True)
    3) –†–µ–¥–∞–≥—É—î –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—É, –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—é—á–∏ –æ–ø–µ—Ä–∞—Ü—ñ—é.
    """
    await update.callback_query.answer()
    # callback_data —Ñ–æ—Ä–º–∞—Ç—É "admin_confirm_card:12345:4000123412341234"
    _, user_id_str, card = update.callback_query.data.split(":", 2)
    user_id = int(user_id_str)

    # 1) –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∫–∞—Ä—Ç–∫—É —É —Ç–∞–±–ª–∏—Ü—ñ clients
    authorize_card(user_id, card)

    # 2) –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –∫–ª—ñ—î–Ω—Ç–∞
    await context.bot.send_message(
        chat_id=user_id,
        text=f"üéâ –í–∞—à–∞ –∫–∞—Ä—Ç–∫–∞ {card} –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∞. –í–∏ —É—Å–ø—ñ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ.",
        reply_markup=client_menu(is_authorized=True)
    )

    # 3) –†–µ–¥–∞–≥—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—É
    try:
        await update.callback_query.message.edit_text(
            text=f"‚úÖ –ö–∞—Ä—Ç–∫–∞ {card} –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id} –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∞."
        )
    except BadRequest as e:
        if "Message is not modified" not in str(e):
            raise

    return

async def show_admin_panel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –í—ñ–¥–æ–±—Ä–∞–∂–∞—î –≥–æ–ª–æ–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—ñ –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é admin_panel_kb.
    """
    await update.callback_query.answer()
    text = "üõ† –ê–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å:"
    sent = await update.callback_query.message.reply_text(
        text,
        reply_markup=admin_panel_kb()
    )
    context.user_data["base_msg_id"] = sent.message_id
    return STEP_ADMIN_SEARCH

# ... (—ñ–Ω—à—ñ –∞–¥–º—ñ–Ω—Å—å–∫—ñ —Ö–µ–Ω–¥–ª–µ—Ä–∏: admin_search, admin_search_result, admin_broadcast) ...

def register_admin_handlers(app: Application) -> None:
    """
    –î–æ–¥–∞—î –≤—Å—ñ CallbackQueryHandler —Ç–∞ MessageHandler –¥–ª—è –∞–¥–º—ñ–Ω—Å—å–∫–æ–≥–æ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É:
      1) –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∫–∞—Ä—Ç–∫–∏ –∫–ª—ñ—î–Ω—Ç–∞ (admin_confirm_card)
      2) –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—ñ (show_admin_panel)
      3) –ü–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç–∞ (admin_search + admin_search_result)
      4) –†–æ–∑—Å–∏–ª–∫–∞ (admin_broadcast)
    """
    app.add_handler(
        CallbackQueryHandler(admin_confirm_card, pattern=r"^admin_confirm_card:\d+:.+"),
        group=0
    )
    app.add_handler(
        CallbackQueryHandler(show_admin_panel, pattern="^admin_panel$"),
        group=0
    )
    # ... —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —ñ–Ω—à–∏—Ö –∞–¥–º—ñ–Ω—Å—å–∫–∏—Ö —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤ (admin_search, admin_search_result, admin_broadcast) ...
