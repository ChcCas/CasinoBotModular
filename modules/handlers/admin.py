from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, CallbackQueryHandler, MessageHandler, filters, Application
from modules.keyboards import admin_panel_kb, client_menu
from modules.callbacks import CB
from modules.states import STEP_MENU, STEP_ADMIN_SEARCH, STEP_ADMIN_BROADCAST
from modules.db import authorize_card, search_user, broadcast_to_all

async def show_admin_panel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.callback_query.answer()
    await update.callback_query.message.reply_text("üõ† –ê–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å:", reply_markup=admin_panel_kb())
    return STEP_ADMIN_SEARCH

async def admin_confirm_card(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–∫–∏ ‚Äúadmin_confirm_card:<user_id>:<card>‚Äù 
    —É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ, —è–∫–µ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä –æ—Ç—Ä–∏–º–∞–≤ –≤—ñ–¥ –∫–ª—ñ—î–Ω—Ç–∞.
    """
    await update.callback_query.answer()
    _, user_id_str, card = update.callback_query.data.split(":", 2)
    user_id = int(user_id_str)

    # 1) –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —É clients
    authorize_card(user_id, card)

    # 2) –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –∫–ª—ñ—î–Ω—Ç–∞
    await context.bot.send_message(
        chat_id=user_id,
        text=f"üéâ –í–∞—à–∞ –∫–∞—Ä—Ç–∫–∞ {card} –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. –í–∏ —É—Å–ø—ñ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ.",
        reply_markup=client_menu(is_authorized=True)
    )

    # 3) –û–Ω–æ–≤–ª—é—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—É
    await update.callback_query.message.edit_text(f"‚úÖ –ö–∞—Ä—Ç–∫–∞ {card} –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id} –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∞.")
    return STEP_MENU

async def admin_search(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –¢—É—Ç –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ—Å–∏–º–æ –≤–≤–µ—Å—Ç–∏ ID –∞–±–æ –∫–∞—Ä—Ç–∫—É –¥–ª—è –ø–æ—à—É–∫—É:
    await update.message.reply_text("üîç –í–≤–µ–¥—ñ—Ç—å ID –∞–±–æ –∫–∞—Ä—Ç–∫—É –¥–ª—è –ø–æ—à—É–∫—É:")
    return STEP_ADMIN_BROADCAST

async def admin_broadcast(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    broadcast_to_all(text)
    await update.message.reply_text("üì¢ –†–æ–∑—Å–∏–ª–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞.")
    return STEP_MENU

def register_admin_handlers(app: Application) -> None:
    # 1) –°–ø–µ—Ä—à—É ‚Äî –æ–ø—Ä–∞—Ü—é–≤–∞–Ω–Ω—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∫–∞—Ä—Ç–∫–∏ (–º–∞—î –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç, group=0)
    app.add_handler(
        CallbackQueryHandler(admin_confirm_card, pattern=r"^admin_confirm_card:\d+:.+",),
        group=0
    )

    # 2) –ü–æ—Ç—ñ–º ‚Äì –∫–Ω–æ–ø–∫–∞ ¬´admin_panel¬ª
    app.add_handler(
        CallbackQueryHandler(show_admin_panel, pattern="^admin_panel$"),
        group=0
    )

    # 3) –û–±—Ä–æ–±–ª—é–≤–∞—á—ñ –≤–≤–µ–¥–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –≤ –∞–¥–º—ñ–Ω—Å—å–∫—ñ–π —á–∞—Å—Ç–∏–Ω—ñ
    app.add_handler(
        MessageHandler(filters.TEXT & ~filters.COMMAND, admin_search),
        group=1
    )
    app.add_handler(
        MessageHandler(filters.TEXT & ~filters.COMMAND, admin_broadcast),
        group=1
    )
