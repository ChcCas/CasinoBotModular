# modules/handlers/profile.py

import re
from telegram import Update
from telegram.ext import (
    CallbackQueryHandler,
    MessageHandler,
    filters,
    ContextTypes,
)
from modules.config import ADMIN_ID, DB_NAME
from keyboards import nav_buttons, client_menu
from states import (
    STEP_MENU,
    STEP_PROFILE_ENTER_CARD,
    STEP_PROFILE_ENTER_PHONE,
    STEP_PROFILE_ENTER_CODE,
)

# –ï—Å–ª–∏ –≤–∞—à db.py –ª–µ–∂–∏—Ç –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞:
from modules.db import get_user, save_user
# –ï—Å–ª–∏ –∂–µ –≤ modules/db.py, —Ç–æ:
# from modules.db import get_user, save_user


async def _enter_profile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –°—Ç–∞—Ä—Ç–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ callback_data="client_profile".
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª–∏–±–æ –≤–≤–æ–¥ + —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ, –ª–∏–±–æ —Å—Ä–∞–∑—É –ø—Ä–æ—Ñ–∏–ª—å.
    """
    await update.callback_query.answer()
    user = get_user(update.effective_user.id)

    if user:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –ë–î ‚Üí –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
        await update.callback_query.message.reply_text(
            f"–í–∞—à –ø—Ä–æ—Ñ—ñ–ª—å:\n\n"
            f"üÜî ID: {user[0]}\n"
            f"üí≥ –ö–∞—Ä—Ç–∫–∞: {user[1]}\n"
            f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {user[2]}",
            reply_markup=client_menu(authorized=True)
        )
        return STEP_MENU

    # –ò–Ω–∞—á–µ ‚Äî –ø—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã
    await update.callback_query.message.reply_text(
        "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –≤–∞—à–æ—ó –∫–∞—Ä—Ç–∫–∏:",
        reply_markup=nav_buttons()
    )
    return STEP_PROFILE_ENTER_CARD


async def profile_enter_card(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞ –∫–∞—Ä—Ç—ã.
    –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã, –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É 4‚Äì7.
    """
    text = re.sub(r"\D", "", update.message.text)
    if not (4 <= len(text) <= 7):
        await update.message.reply_text(
            "–ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –∫–∞—Ä—Ç–∫–∏. –ú–∞—î –±—É—Ç–∏ –≤—ñ–¥ 4 –¥–æ 7 —Ü–∏—Ñ—Ä.",
            reply_markup=nav_buttons()
        )
        return STEP_PROFILE_ENTER_CARD

    context.user_data["profile_card"] = text
    await update.message.reply_text(
        "–î—è–∫—É—é! –¢–µ–ø–µ—Ä –≤–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É (–ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ 0 —Ç–∞ –º–∞—î 10 —Ü–∏—Ñ—Ä):",
        reply_markup=nav_buttons()
    )
    return STEP_PROFILE_ENTER_PHONE


async def profile_enter_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.
    –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã, –ø—Ä–æ–≤–µ—Ä—è–µ–º: 10 —Ü–∏—Ñ—Ä, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å '0'.
    """
    text = re.sub(r"\D", "", update.message.text)
    if not (len(text) == 10 and text.startswith("0")):
        await update.message.reply_text(
            "–ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω—É. –ú–∞—î –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 0 + 9 —Ü–∏—Ñ—Ä.",
            reply_markup=nav_buttons()
        )
        return STEP_PROFILE_ENTER_PHONE

    context.user_data["profile_phone"] = text

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
    save_user(
        update.effective_user.id,
        context.user_data["profile_card"],
        context.user_data["profile_phone"]
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
    await update.message.reply_text(
        "–í–∏ —É—Å–ø—ñ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ! –û—Å—å –≤–∞—à –ø—Ä–æ—Ñ—ñ–ª—å:",
        reply_markup=client_menu(authorized=True)
    )
    return STEP_MENU


async def profile_exit(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ üîì –í–∏–π—Ç–∏ ‚Äî —Å–±—Ä–æ—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏.
    """
    await update.callback_query.answer()
    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ‚Äî –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –Ω–∞–∂–∞—Ç–∏–∏ / ¬´–ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å¬ª —Å–Ω–æ–≤–∞ –ø–æ–ø—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏
    context.user_data.pop("profile_card", None)
    context.user_data.pop("profile_phone", None)

    await update.callback_query.message.reply_text(
        "–í–∏ –≤–∏–π—à–ª–∏ –∑ –ø—Ä–æ—Ñ—ñ–ª—é.",
        reply_markup=client_menu(authorized=False)
    )
    return STEP_MENU


def register_profile_handlers(app):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã —Å—Ü–µ–Ω–∞—Ä–∏—è ¬´–ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å¬ª.
    """
    # 1) –ü–æ –Ω–∞–∂–∞—Ç–∏—é –∫–Ω–æ–ø–∫–∏ ¬´–ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å¬ª
    app.add_handler(
        CallbackQueryHandler(_enter_profile, pattern="^client_profile$"),
        group=0
    )

    # 2) –í–≤–æ–¥ –∫–∞—Ä—Ç—ã –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (—Ç–æ–ª—å–∫–æ –ø–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏—è–º, –Ω–µ –∫–æ–º–∞–Ω–¥–∞–º)
    app.add_handler(
        MessageHandler(filters.TEXT & ~filters.COMMAND, profile_enter_card),
        group=1
    )
    app.add_handler(
        MessageHandler(filters.TEXT & ~filters.COMMAND, profile_enter_phone),
        group=1
    )

    # 3) –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è
    app.add_handler(
        CallbackQueryHandler(profile_exit, pattern="^logout$"),
        group=2
    )
