# modules/handlers/profile.py

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.error import BadRequest
from telegram.ext import (
    CallbackQueryHandler,
    MessageHandler,
    ConversationHandler,
    filters,
    ContextTypes,
    Application
)
from modules.config import ADMIN_ID
from modules.db import authorize_card, search_user, get_user_history
from modules.keyboards import nav_buttons, client_menu
from modules.callbacks import CB
from modules.states import STEP_FIND_CARD_PHONE, STEP_MENU

async def start_profile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–æ–±–Ω–∏–∫, –∫–æ–ª–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞—Ç–∏—Å–Ω—É–≤ ‚Äúüí≥ –ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å‚Äù (callback_data="client_profile").
    1) –Ø–∫—â–æ —É clients —î –∑–∞–ø–∏—Å –¥–ª—è —Ü—å–æ–≥–æ user_id –∑ –ø–æ–ª–µ–º card ‚Üí –ø–æ–∫–∞–∑—É—î–º–æ –º–µ–Ω—é –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    2) –Ø–∫—â–æ –Ω–µ–º–∞ –∫–∞—Ä—Ç–∫–∏ ‚Üí –∑–∞–ø–∏—Ç—É—î–º–æ ‚Äúüí≥ –í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç–∫–∏:‚Äù.
    """
    await update.callback_query.answer()
    user_id = update.effective_user.id

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤ –ë–î
    user_record = search_user(str(user_id))
    if user_record and user_record.get("card"):
        # –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π: –ø–æ–∫–∞–∑—É—î–º–æ –º–µ–Ω—é –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ–≥–æ
        card = user_record["card"]
        text = (
            f"üéâ –í–∏ –≤–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ!\n"
            f"–í–∞—à–∞ –∫–∞—Ä—Ç–∫–∞: {card}\n\n"
            "–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:"
        )
        keyboard = client_menu(is_authorized=True)

        base_id = context.user_data.get("base_msg_id")
        if base_id:
            try:
                # –ü—Ä–∞–≥–Ω–µ–º–æ —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ –Ω–∞—è–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                await context.bot.edit_message_text(
                    chat_id=update.effective_chat.id,
                    message_id=base_id,
                    text=text,
                    reply_markup=keyboard
                )
            except BadRequest as e:
                msg = str(e)
                if "Message to edit not found" in msg or "Message is not modified" in msg:
                    # –Ø–∫—â–æ base_msg –≤–∏–¥–∞–ª–µ–Ω–æ –∞–±–æ —Ç–µ–∫—Å—Ç –Ω–µ –∑–º—ñ–Ω–∏–≤—Å—è ‚Üí –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                    sent = await update.callback_query.message.reply_text(
                        text,
                        reply_markup=keyboard
                    )
                    context.user_data["base_msg_id"] = sent.message_id
                else:
                    raise
        else:
            # –Ø–∫—â–æ —â–µ –Ω–µ –±—É–ª–æ base_msg ‚Üí –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –Ω–æ–≤–µ
            sent = await update.callback_query.message.reply_text(
                text,
                reply_markup=keyboard
            )
            context.user_data["base_msg_id"] = sent.message_id

        return STEP_MENU

    # –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ–º–∞ –≤ –ë–î –∞–±–æ –Ω–µ–º–∞ –∫–∞—Ä—Ç–∫–∏ ‚Üí –∑–∞–ø–∏—Ç—É—î–º–æ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç–∫–∏
    prompt = "üí≥ –í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –≤–∞—à–æ—ó –∫–ª—É–±–Ω–æ—ó –∫–∞—Ä—Ç–∫–∏:"
    sent = await update.callback_query.message.reply_text(
        prompt,
        reply_markup=nav_buttons()
    )
    context.user_data["base_msg_id"] = sent.message_id
    return STEP_FIND_CARD_PHONE

async def find_card(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–æ–±–Ω–∏–∫, –∫–æ–ª–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —É–≤—ñ–≤ —Å–≤—ñ–π –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç–∫–∏:
    1) –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —ñ—Å–Ω—É—î —Ç–∞–∫–∞ –∫–∞—Ä—Ç–∫–∞ —É –ë–î (search_user(card)):
       - –Ø–∫—â–æ —î ‚Üí ‚Äú–∞–≤—Ç–æ—Ä–∏–∑—É—î–º–æ‚Äù (authorize_card), –ø–æ–∫–∞–∑—É—î–º–æ –º–µ–Ω—é –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ–≥–æ.
       - –Ø–∫—â–æ –Ω–µ–º–∞ ‚Üí –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –∞–¥–º—ñ–Ω—É –∑–∞–ø–∏—Ç ‚Äúadmin_confirm_card:<user_id>:<card>‚Äù.
    2) –†–µ–¥–∞–≥—É—î–º–æ (–∞–±–æ –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –Ω–æ–≤–µ) –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—É:
       - –Ø–∫—â–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ ‚Üí ‚Äú–ö–∞—Ä—Ç–∫—É –∑–Ω–∞–π–¥–µ–Ω–æ‚Ä¶‚Äù
       - –Ø–∫—â–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ ‚Üí ‚Äú–í–∞—à –∑–∞–ø–∏—Ç –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É‚Ä¶‚Äù
    3) –ó–∞–≤–µ—Ä—à—É—î–º–æ —Å—Ü–µ–Ω–∞—Ä—ñ–π (ConversationHandler.END).
    """
    card = update.message.text.strip()
    user_id = update.effective_user.id
    full_name = update.effective_user.full_name

    # 1) –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞: —á–∏ –≤–∂–µ —î —Ç–∞–∫–∞ –∫–∞—Ä—Ç–∫–∞ —É –ë–î?
    existing = search_user(card)
    if existing:
        # ‚Äî –Ø–∫—â–æ –∫–∞—Ä—Ç–∫–∞ –∑–Ω–∞–π–¥–µ–Ω–∞ (–π–º–æ–≤—ñ—Ä–Ω–æ, –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏–≤ —Ä–∞–Ω—ñ—à–µ)
        authorize_card(user_id, card)
        text = f"üéâ –ö–∞—Ä—Ç–∫–∞ {card} –∑–Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑—ñ. –í–∏ —É—Å–ø—ñ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ."
        keyboard = client_menu(is_authorized=True)

        base_id = context.user_data.get("base_msg_id")
        if base_id:
            try:
                await context.bot.edit_message_text(
                    chat_id=update.effective_chat.id,
                    message_id=base_id,
                    text=text,
                    reply_markup=keyboard
                )
            except BadRequest as e:
                msg = str(e)
                if "Message to edit not found" in msg or "Message is not modified" in msg:
                    sent = await update.message.reply_text(
                        text,
                        reply_markup=keyboard
                    )
                    context.user_data["base_msg_id"] = sent.message_id
                else:
                    raise
        else:
            sent = await update.message.reply_text(
                text,
                reply_markup=keyboard
            )
            context.user_data["base_msg_id"] = sent.message_id

        # –ó–∞–≤–µ—Ä—à—É—î–º–æ
        context.user_data.pop("base_msg_id", None)
        return ConversationHandler.END

    # 2) –Ø–∫—â–æ –∫–∞—Ä—Ç–∫–∏ –Ω–µ–º–∞—î ‚Äî –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –∞–¥–º—ñ–Ω—É –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
    kb = InlineKeyboardMarkup([[
        InlineKeyboardButton(
            "‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∫–∞—Ä—Ç–∫—É",
            callback_data=f"admin_confirm_card:{user_id}:{card}"
        )
    ]])
    await context.bot.send_message(
        chat_id=ADMIN_ID,
        text=(
            f"‚ÑπÔ∏è –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {full_name} (ID {user_id})\n"
            f"–≤–≤—ñ–≤ –∫–∞—Ä—Ç–∫—É: {card}\n"
            "–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö —ñ, —è–∫—â–æ –≤—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å ¬´‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∫–∞—Ä—Ç–∫—É¬ª."
        ),
        reply_markup=kb
    )

    # 3) –Ü–Ω—Ñ–æ—Ä–º—É—î–º–æ –∫–ª—ñ—î–Ω—Ç–∞, —â–æ –∑–∞–ø–∏—Ç –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É
    confirmation_text = "‚úÖ –í–∞—à –∑–∞–ø–∏—Ç –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É. –û—á—ñ–∫—É–π—Ç–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è."
    base_id = context.user_data.get("base_msg_id")
    if base_id:
        try:
            await context.bot.edit_message_text(
                chat_id=update.effective_chat.id,
                message_id=base_id,
                text=confirmation_text,
                reply_markup=nav_buttons()
            )
        except BadRequest as e:
            msg = str(e)
            if "Message to edit not found" in msg or "Message is not modified" in msg:
                sent = await update.message.reply_text(
                    confirmation_text,
                    reply_markup=nav_buttons()
                )
                context.user_data["base_msg_id"] = sent.message_id
            else:
                raise
    else:
        sent = await update.message.reply_text(
            confirmation_text,
            reply_markup=nav_buttons()
        )
        context.user_data["base_msg_id"] = sent.message_id

    # –ó–∞–≤–µ—Ä—à—É—î–º–æ —Ç–∞ –æ—á–∏—â–∞—î–º–æ base_msg_id
    context.user_data.pop("base_msg_id", None)
    return ConversationHandler.END

# ‚îÄ‚îÄ‚îÄ –î–æ–¥–∞—Ç–∫–æ–≤—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —É –º–µ–Ω—é –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ‚îÄ‚îÄ‚îÄ

async def cashback_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ ‚ÄúüéÅ –ö–µ—à–±–µ–∫‚Äù –≤ –º–µ–Ω—é –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    –ü—Ä–æ—Å—Ç–æ –Ω–∞–¥—Å–∏–ª–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é (–º–æ–∂–Ω–∞ —Ä–æ–∑—à–∏—Ä–∏—Ç–∏ –±—ñ–∑–Ω–µ—Å-–ª–æ–≥—ñ–∫—É).
    """
    await update.callback_query.answer()
    text = "üéÅ –í–∞—à –∫–µ—à–±–µ–∫: 0 UAH (–ø–æ–∫–∏ —â–æ –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö –∫–µ—à–±–µ–∫—ñ–≤)."
    base_id = context.user_data.get("base_msg_id")
    if base_id:
        try:
            await context.bot.edit_message_text(
                chat_id=update.effective_chat.id,
                message_id=base_id,
                text=text,
                reply_markup=client_menu(is_authorized=True)
            )
        except BadRequest as e:
            msg = str(e)
            if "Message to edit not found" in msg or "Message is not modified" in msg:
                sent = await update.callback_query.message.reply_text(
                    text,
                    reply_markup=client_menu(is_authorized=True)
                )
                context.user_data["base_msg_id"] = sent.message_id
            else:
                raise
    else:
        sent = await update.callback_query.message.reply_text(
            text,
            reply_markup=client_menu(is_authorized=True)
        )
        context.user_data["base_msg_id"] = sent.message_id

async def history_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ ‚Äúüìñ –Ü—Å—Ç–æ—Ä—ñ—è‚Äù –≤ –º–µ–Ω—é –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    –í–∏–≤–æ–¥–∏—Ç—å –¥–æ 10 –æ—Å—Ç–∞–Ω–Ω—ñ—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π (–¥–µ–ø–æ–∑–∏—Ç—ñ–≤ + –≤–∏–≤–µ–¥–µ–Ω—å).
    """
    await update.callback_query.answer()
    user_id = update.effective_user.id
    history = get_user_history(user_id)

    if not history:
        text = "üìñ –£ –≤–∞—Å —â–µ –Ω–µ–º–∞—î –∂–æ–¥–Ω–∏—Ö –æ–ø–µ—Ä–∞—Ü—ñ–π."
    else:
        lines = ["üìñ –û—Å—Ç–∞–Ω–Ω—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó:"]
        for op in history:
            t = op["timestamp"]
            amt = op["amount"]
            info = op["info"]
            if op["type"] == "deposit":
                lines.append(f"‚Ä¢ [–î–µ–ø–æ–∑–∏—Ç] {amt} UAH (–ø—Ä–æ–≤–∞–π–¥–µ—Ä: {info}) –æ {t}")
            else:
                lines.append(f"‚Ä¢ [–í–∏–≤–µ–¥–µ–Ω–Ω—è] {amt} UAH (–º–µ—Ç–æ–¥: {info}) –æ {t}")
        text = "\n".join(lines)

    keyboard = client_menu(is_authorized=True)
    base_id = context.user_data.get("base_msg_id")
    if base_id:
        try:
            await context.bot.edit_message_text(
                chat_id=update.effective_chat.id,
                message_id=base_id,
                text=text,
                reply_markup=keyboard
            )
        except BadRequest as e:
            msg = str(e)
            if "Message to edit not found" in msg or "Message is not modified" in msg:
                sent = await update.callback_query.message.reply_text(
                    text,
                    reply_markup=keyboard
                )
                context.user_data["base_msg_id"] = sent.message_id
            else:
                raise
    else:
        sent = await update.callback_query.message.reply_text(
            text,
            reply_markup=keyboard
        )
        context.user_data["base_msg_id"] = sent.message_id

async def logout_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ ‚Äúüîí –í–∏–π—Ç–∏‚Äù –≤ –º–µ–Ω—é –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    –ü—Ä–æ—Å—Ç–æ –≤–∏–¥–∞–ª—è—î–º–æ 'base_msg_id' (—â–æ–± –ø—Ä–∏ –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É –≤—Ö–æ–¥—ñ –≤ –º–µ–Ω—é –∑–Ω–æ–≤—É –∑–∞–ø–∏—Ç–∞—Ç–∏ –∫–∞—Ä—Ç–∫—É)
    —ñ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –∫–ª—ñ—î–Ω—Ç–∞ –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é (—è–∫ –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ–≥–æ).
    """
    await update.callback_query.answer()
    user_id = update.effective_user.id

    # –Ø–∫—â–æ —Ö–æ—á–µ–º–æ ‚Äî –º–æ–∂–Ω–∞ —Ç–∞–∫–æ–∂ –≤–∏–¥–∞–ª–∏—Ç–∏ –∫–∞—Ä—Ç–∫—É –∑ –ë–î, –∞–ª–µ –∑–∞–∑–≤–∏—á–∞–π "logout" 
    # –æ–∑–Ω–∞—á–∞—î –ø—Ä–æ—Å—Ç–æ —Å–∫–∏–¥–∞–Ω–Ω—è —Å–µ—Å—ñ—ó, –Ω–µ –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ –≤–∏–¥–∞–ª—è—Ç–∏ –∑–∞–ø–∏—Å —É clients.
    # –¢–æ–º—É –ø—Ä–æ—Å—Ç–æ –æ—á–∏—â—É—î–º–æ base_msg_id, –∞ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –ø–æ–∫–∞–∂–µ, —â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á 
    # –±—ñ–ª—å—à–µ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π.
    context.user_data.pop("base_msg_id", None)

    text = "üîí –í–∏ –≤–∏–π—à–ª–∏ –∑ –ø—Ä–æ—Ñ—ñ–ª—é. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ ‚Äúüí≥ –ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å‚Äù –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ—ó –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó."
    keyboard = client_menu(is_authorized=False)

    # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –∞–±–æ —Ä–µ–¥–∞–≥—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    sent = await update.callback_query.message.reply_text(
        text,
        reply_markup=keyboard
    )
    context.user_data["base_msg_id"] = sent.message_id

async def help_auth_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ ‚Äú‚ÑπÔ∏è –î–æ–ø–æ–º–æ–≥–∞‚Äù —É –º–µ–Ω—é –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    –ü—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—É—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π —Ç–µ–∫—Å—Ç –¥–æ–ø–æ–º–æ–≥–∏.
    """
    await update.callback_query.answer()
    text = "‚ÑπÔ∏è –î–æ–ø–æ–º–æ–≥–∞:\n/start ‚Äî –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞\nüì≤ –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏, —è–∫—â–æ —î –ø–∏—Ç–∞–Ω–Ω—è."
    keyboard = client_menu(is_authorized=True)

    base_id = context.user_data.get("base_msg_id")
    if base_id:
        try:
            await context.bot.edit_message_text(
                chat_id=update.effective_chat.id,
                message_id=base_id,
                text=text,
                reply_markup=keyboard
            )
        except BadRequest as e:
            msg = str(e)
            if "Message to edit not found" in msg or "Message is not modified" in msg:
                sent = await update.callback_query.message.reply_text(
                    text,
                    reply_markup=keyboard
                )
                context.user_data["base_msg_id"] = sent.message_id
            else:
                raise
    else:
        sent = await update.callback_query.message.reply_text(
            text,
            reply_markup=keyboard
        )
        context.user_data["base_msg_id"] = sent.message_id

# ‚îÄ‚îÄ‚îÄ ConversationHandler –¥–ª—è —Å—Ü–µ–Ω–∞—Ä—ñ—é ‚Äú–ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å‚Äù ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
profile_conv = ConversationHandler(
    entry_points=[
        CallbackQueryHandler(start_profile, pattern=f"^{CB.CLIENT_PROFILE.value}$")
    ],
    states={
        STEP_FIND_CARD_PHONE: [
            MessageHandler(filters.TEXT & ~filters.COMMAND, find_card)
        ],
        # –ü—ñ—Å–ª—è —Ç–æ–≥–æ, —è–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —É ‚ÄúSTEP_MENU‚Äù (—Ç–æ–±—Ç–æ –≤–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π), 
        # –º–∏ –æ–±—Ä–æ–±–ª—è—î–º–æ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞.
        STEP_MENU: [
            CallbackQueryHandler(cashback_handler, pattern=r"^cashback$"),
            CallbackQueryHandler(history_handler, pattern=r"^history$"),
            CallbackQueryHandler(logout_handler, pattern=r"^logout$"),
            CallbackQueryHandler(help_auth_handler, pattern=f"^{CB.HELP.value}$"),
            # –ö–Ω–æ–ø–∫–∏ ‚Äúdeposit_start‚Äù —Ç–∞ ‚Äúwithdraw_start‚Äù –±—É–¥—É—Ç—å –æ–±—Ä–æ–±–ª–µ–Ω—ñ –æ–∫—Ä–µ–º–∏–º–∏ ConversationHandler-–∞–º–∏
        ]
    },
    fallbacks=[
        # –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞—Ç–∏—Å–Ω–µ ‚Äú–ù–∞–∑–∞–¥‚Äù/‚Äú–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚Äù ‚Äî –ø—Ä–æ—Å—Ç–æ –≤–∏—Ö–æ–¥–∏–º–æ –∑ —Ü—å–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä—ñ—é
        CallbackQueryHandler(lambda u, c: ConversationHandler.END, pattern=f"^{CB.BACK.value}$"),
        CallbackQueryHandler(lambda u, c: ConversationHandler.END, pattern=f"^{CB.HOME.value}$"),
    ],
    per_chat=True,
)

def register_profile_handlers(app: Application) -> None:
    """
    –†–µ–≥—ñ—Å—Ç—Ä—É—î ConversationHandler –¥–ª—è ‚Äú–ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å‚Äù (–≥—Ä—É–ø–∞ 0),
    —â–æ–± —É—Å—ñ callback_data, —è–∫—ñ –ø–æ—á–∏–Ω–∞—é—Ç—å—Å—è –∑ ‚Äúclient_profile‚Äù –∞–±–æ
    –∑ –º–µ–Ω—é –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞, –æ–±—Ä–æ–±–ª—è–ª–∏—Å—è –¥–æ –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω–æ–≥–æ.
    """
    app.add_handler(profile_conv, group=0)
