# modules/handlers/profile.py

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.error import BadRequest
from telegram.ext import (
    CallbackQueryHandler,
    MessageHandler,
    ConversationHandler,
    filters,
    ContextTypes,
    Application
)
from modules.config import ADMIN_ID
from modules.db import authorize_card, search_user
from modules.keyboards import nav_buttons, client_menu
from modules.callbacks import CB
from modules.states import STEP_FIND_CARD_PHONE, STEP_MENU

async def start_profile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    1) –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞—Ç–∏—Å–Ω—É–≤ ‚Äúüí≥ –ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å‚Äù (callback_data="client_profile").
    2) –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤ –ë–î: —è–∫—â–æ –≤–∂–µ —î –∑–∞–ø–∏—Å –ø—Ä–æ —Ü—å–æ–≥–æ user_id ‚Üí –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π, 
       —Ä–µ–¥–∞–≥—É—î–º–æ / –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é —Ç–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    3) –Ø–∫—â–æ –∑–∞–ø–∏—Å—É –Ω–µ–º–∞ ‚Üí –∑–∞–ø–∏—Ç—É—î–º–æ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç–∫–∏.
    """
    await update.callback_query.answer()
    user_id = update.effective_user.id
    user_record = search_user(str(user_id))  # —à—É–∫–∞—î–º–æ –∑–∞ user_id

    if user_record and user_record.get("card"):
        # –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π: –ø–æ–∫–∞–∑—É—î–º–æ —î–¥–∏–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ–∑ –º–µ–Ω—é –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        card = user_record["card"]
        text = (
            f"üéâ –í–∏ –≤–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ!\n"
            f"–í–∞—à–∞ –∫–∞—Ä—Ç–∫–∞: {card}\n\n"
            "–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:"
        )
        keyboard = client_menu(is_authorized=True)

        # –Ø–∫—â–æ —î base_msg_id ‚Äî —Ä–µ–¥–∞–≥—É—î–º–æ –π–æ–≥–æ; —ñ–Ω–∞–∫—à–µ ‚Äî –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        base_id = context.user_data.get("base_msg_id")
        if base_id:
            try:
                await context.bot.edit_message_text(
                    chat_id=update.effective_chat.id,
                    message_id=base_id,
                    text=text,
                    reply_markup=keyboard
                )
            except BadRequest as e:
                # –Ü–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫—É, —è–∫—â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –∑–º—ñ–Ω–∏–ª–æ—Å—è
                if "Message is not modified" not in str(e):
                    raise
        else:
            sent = await update.callback_query.message.reply_text(
                text,
                reply_markup=keyboard
            )
            context.user_data["base_msg_id"] = sent.message_id

        return STEP_MENU

    # –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —â–µ –Ω–µ–º–∞ –≤ –ë–î (–∞–±–æ –Ω–µ–º–∞ –∫–∞—Ä—Ç–∫–∏) ‚Üí –∑–∞–ø–∏—Ç—É—î–º–æ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç–∫–∏
    text = "üí≥ –í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –≤–∞—à–æ—ó –∫–ª—É–±–Ω–æ—ó –∫–∞—Ä—Ç–∫–∏:"
    sent = await update.callback_query.message.reply_text(
        text,
        reply_markup=nav_buttons()
    )
    context.user_data["base_msg_id"] = sent.message_id
    return STEP_FIND_CARD_PHONE

async def find_card(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    1) –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤–æ–¥–∏—Ç—å –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç–∫–∏ (MessageHandler).
    2) –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –æ–¥—Ä–∞–∑—É: —á–∏ –≤–∂–µ —î —Ü—è –∫–∞—Ä—Ç–∫–∞ –≤ –ë–î (–∑–∞ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–º –Ω–æ–º–µ—Ä–æ–º)? 
       - –Ø–∫—â–æ —î –∑–∞–ø–∏—Å —ñ–∑ —Ç–∞–∫–æ—é –∫–∞—Ä—Ç–∫–æ—é, –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π —Ä–∞–Ω—ñ—à–µ –∞–¥–º—ñ–Ω–æ–º ‚Üí –∞–≤—Ç–æ—Ä–∏–∑—É—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –æ–¥—Ä–∞–∑—É.
       - –Ü–Ω–∞–∫—à–µ ‚Üí –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –∞–¥–º—ñ–Ω—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–æ—é –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è. 
    3) –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –∫–ª—ñ—î–Ω—Ç–∞, —â–æ –∑–∞–ø–∏—Ç –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É, —è–∫—â–æ —Ü–µ –Ω–æ–≤–∞ –∫–∞—Ä—Ç–∫–∞.
    4) –ó–∞–≤–µ—Ä—à—É—î–º–æ —Å—Ü–µ–Ω–∞—Ä—ñ–π.
    """
    card = update.message.text.strip()
    user_id = update.effective_user.id
    full_name = update.effective_user.full_name

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ —ñ—Å–Ω—É—î –≤ –ë–î –∑–∞–ø–∏—Å –ø—Ä–æ —Ü—é –∫–∞—Ä—Ç–∫—É
    existing = search_user(card)  # —à—É–∫–∞—î–º–æ –∑–∞ –Ω–æ–º–µ—Ä–æ–º –∫–∞—Ä—Ç–∫–∏
    if existing:
        # –Ø–∫—â–æ –∫–∞—Ä—Ç–∫–∞ –≤–∂–µ —î (–π–º–æ–≤—ñ—Ä–Ω–æ, –∞–¥–º—ñ–Ω –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏–≤ —Ä–∞–Ω—ñ—à–µ) ‚Äì –∞–≤—Ç–æ—Ä–∏–∑—É—î–º–æ
        authorize_card(user_id, card)  # –ø–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—è, —â–æ user_id –∑–±–µ—Ä—ñ–≥—Å—è –ø—ñ–¥ —Ü–∏–º card
        text = f"üéâ –ö–∞—Ä—Ç–∫–∞ {card} –∑–Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑—ñ. –í–∏ —É—Å–ø—ñ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ."
        keyboard = client_menu(is_authorized=True)

        # –†–µ–¥–∞–≥—É—î–º–æ (–∞–±–æ –Ω–∞–¥—Å–∏–ª–∞—î–º–æ) —î–¥–∏–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        base_id = context.user_data.get("base_msg_id")
        if base_id:
            try:
                await context.bot.edit_message_text(
                    chat_id=update.effective_chat.id,
                    message_id=base_id,
                    text=text,
                    reply_markup=keyboard
                )
            except BadRequest as e:
                if "Message is not modified" not in str(e):
                    raise
        else:
            sent = await update.message.reply_text(
                text,
                reply_markup=keyboard
            )
            context.user_data["base_msg_id"] = sent.message_id

        # –ó–∞–≤–µ—Ä—à—É—î–º–æ —Å—Ü–µ–Ω–∞—Ä—ñ–π
        context.user_data.pop("base_msg_id", None)
        return ConversationHandler.END

    # –Ø–∫—â–æ –∫–∞—Ä—Ç–∫–∏ —â–µ –Ω–µ–º–∞ ‚Üí –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –∞–¥–º—ñ–Ω—É –∑–∞–ø–∏—Ç –Ω–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∫–∞—Ä—Ç–∫–∏
    kb = InlineKeyboardMarkup([[
        InlineKeyboardButton(
            "‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∫–∞—Ä—Ç–∫—É",
            callback_data=f"admin_confirm_card:{user_id}:{card}"
        )
    ]])
    await context.bot.send_message(
        chat_id=ADMIN_ID,
        text=(
            f"‚ÑπÔ∏è –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {full_name} (ID {user_id})\n"
            f"–≤–≤—ñ–≤ –∫–∞—Ä—Ç–∫—É: {card}\n"
            "–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö —ñ, —è–∫—â–æ –≤—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å ¬´‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∫–∞—Ä—Ç–∫—É¬ª."
        ),
        reply_markup=kb
    )

    # –Ü–Ω—Ñ–æ—Ä–º—É—î–º–æ –∫–ª—ñ—î–Ω—Ç–∞, —â–æ –∑–∞–ø–∏—Ç –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É
    confirmation_text = "‚úÖ –í–∞—à –∑–∞–ø–∏—Ç –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É. –û—á—ñ–∫—É–π—Ç–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è."
    base_id = context.user_data.get("base_msg_id")
    if base_id:
        try:
            await context.bot.edit_message_text(
                chat_id=update.effective_chat.id,
                message_id=base_id,
                text=confirmation_text,
                reply_markup=nav_buttons()
            )
        except BadRequest as e:
            if "Message is not modified" not in str(e):
                raise
    else:
        sent = await update.message.reply_text(
            confirmation_text,
            reply_markup=nav_buttons()
        )
        context.user_data["base_msg_id"] = sent.message_id

    # –ó–∞–≤–µ—Ä—à—É—î–º–æ —Å—Ü–µ–Ω–∞—Ä—ñ–π —Ç–∞ –æ—á–∏—â—É—î–º–æ base_msg_id
    context.user_data.pop("base_msg_id", None)
    return ConversationHandler.END

profile_conv = ConversationHandler(
    entry_points=[
        CallbackQueryHandler(start_profile, pattern=f"^{CB.CLIENT_PROFILE.value}$")
    ],
    states={
        STEP_FIND_CARD_PHONE: [
            MessageHandler(filters.TEXT & ~filters.COMMAND, find_card)
        ],
    },
    fallbacks=[
        # –Ø–∫—â–æ –∫–ª—ñ—î–Ω—Ç –Ω–∞—Ç–∏—Å ¬´–ù–∞–∑–∞–¥¬ª –∞–±–æ ¬´–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é¬ª –ø—ñ–¥ —á–∞—Å –≤–≤–µ–¥–µ–Ω–Ω—è –∫–∞—Ä—Ç–∫–∏ ‚Äî
        # –∑–∞–≤–µ—Ä—à—É—î–º–æ —Å—Ü–µ–Ω–∞—Ä—ñ–π –±–µ–∑ –ø–æ–º–∏–ª–æ–∫
        CallbackQueryHandler(lambda u, c: ConversationHandler.END, pattern=f"^{CB.BACK.value}$"),
        CallbackQueryHandler(lambda u, c: ConversationHandler.END, pattern=f"^{CB.HOME.value}$"),
    ],
    per_chat=True,
)

def register_profile_handlers(app: Application) -> None:
    """
    –†–µ—î—Å—Ç—Ä—É—î ConversationHandler –¥–ª—è —Å—Ü–µ–Ω–∞—Ä—ñ—é ‚Äú–ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å‚Äù (–≥—Ä—É–ø–∞ 0),
    —â–æ–± –æ–±—Ä–æ–±–∏—Ç–∏ callback_data="client_profile" –¥–æ –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω–æ–≥–æ handler.
    """
    app.add_handler(profile_conv, group=0)
