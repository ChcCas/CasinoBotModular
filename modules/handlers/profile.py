# modules/handlers/profile.py

import re
from telegram import Update
from telegram.ext import (
    ConversationHandler,
    CallbackQueryHandler,
    MessageHandler,
    filters,
    ContextTypes,
)
from modules.db import get_user, save_user
from keyboards import nav_buttons, client_menu
from states import (
    STEP_PROFILE_ENTER_CARD,
    STEP_PROFILE_ENTER_PHONE,
    STEP_MENU,
)

async def start_profile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–¢–æ—á–∫–∞ –≤—Ö–æ–¥—É –≤ —Å—Ü–µ–Ω–∞—Ä—ñ–π '–ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å'."""
    await update.callback_query.answer()
    user = get_user(update.effective_user.id)

    # –Ø–∫—â–æ –≤–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π ‚Äî –ø–æ–∫–∞–∑—É—î–º–æ –º–µ–Ω—é –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞
    if user:
        await update.callback_query.message.reply_text(
            "–í–∏ –≤–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ üëá",
            reply_markup=client_menu(is_authorized=True),
        )
        return STEP_MENU

    # –Ü–Ω–∞–∫—à–µ ‚Äî –ø—Ä–æ—Å–∏–º–æ –≤–≤–µ—Å—Ç–∏ –∫–∞—Ä—Ç–∫—É
    await update.callback_query.message.reply_text(
        "–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç–∫–∏ (4‚Äì7 —Ü–∏—Ñ—Ä):",
        reply_markup=nav_buttons(),
    )
    return STEP_PROFILE_ENTER_CARD

async def profile_enter_card(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–∫–∞ –≤–≤–æ–¥ —É –∫–∞—Ä—Ç–∫–∏ (4‚Äì7 —Ü–∏—Ñ—Ä)."""
    card = re.sub(r"\D", "", update.message.text)
    if not (4 <= len(card) <= 7):
        await update.message.reply_text(
            "–ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –∫–∞—Ä—Ç–∫–∏. –ú–∞—î –±—É—Ç–∏ –≤—ñ–¥ 4 –¥–æ 7 —Ü–∏—Ñ—Ä.",
            reply_markup=nav_buttons(),
        )
        return STEP_PROFILE_ENTER_CARD

    context.user_data["card"] = card
    await update.message.reply_text(
        "–¢–µ–ø–µ—Ä –≤–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É (0XXXXXXXXX):",
        reply_markup=nav_buttons(),
    )
    return STEP_PROFILE_ENTER_PHONE

async def profile_enter_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–∫–∞ –≤–≤–æ–¥—É —Ç–µ–ª–µ—Ñ–æ–Ω—É (10 —Ü–∏—Ñ—Ä, –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ 0)."""
    phone = re.sub(r"\D", "", update.message.text)
    if not (len(phone) == 10 and phone.startswith("0")):
        await update.message.reply_text(
            "–ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω—É. –ú–∞—î –±—É—Ç–∏ 10 —Ü–∏—Ñ—Ä —ñ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 0.",
            reply_markup=nav_buttons(),
        )
        return STEP_PROFILE_ENTER_PHONE

    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —É –±–∞–∑—É —ñ –≤—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –º–µ–Ω—é –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞
    save_user(update.effective_user.id, context.user_data["card"], phone)
    await update.message.reply_text(
        "‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞!",
        reply_markup=client_menu(is_authorized=True),
    )
    return STEP_MENU

def register_profile_handlers(app):
    """–†–µ—î—Å—Ç—Ä—É—î ConversationHandler –¥–ª—è –ø—Ä–æ—Ñ—ñ–ª—é."""
    conv = ConversationHandler(
        entry_points=[
            CallbackQueryHandler(start_profile, pattern="^client_profile$"),
        ],
        states={
            STEP_PROFILE_ENTER_CARD: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, profile_enter_card)
            ],
            STEP_PROFILE_ENTER_PHONE: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, profile_enter_phone)
            ],
            # –ü—ñ—Å–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—è –≤ STEP_MENU
            STEP_MENU: []
        },
        fallbacks=[
            # –¥–æ–∑–≤–æ–ª—è—î–º–æ –∑–Ω–æ–≤—É –∑–∞–ø—É—Å—Ç–∏—Ç–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é, —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞—Ç–∏—Å–Ω–µ –∫–Ω–æ–ø–∫—É ¬´–ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å¬ª
            CallbackQueryHandler(start_profile, pattern="^client_profile$")
        ],
        allow_reentry=True
    )
    app.add_handler(conv)