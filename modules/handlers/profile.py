# modules/handlers/profile.py

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.error import BadRequest
from telegram.ext import (
    CallbackQueryHandler,
    MessageHandler,
    ConversationHandler,
    filters,
    ContextTypes,
    Application
)
from modules.config import ADMIN_ID
from modules.db import authorize_card, search_user
from modules.keyboards import nav_buttons, client_menu
from modules.callbacks import CB
from modules.states import STEP_FIND_CARD_PHONE

async def start_profile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    1) –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞—Ç–∏—Å–Ω—É–≤ ‚Äúüí≥ –ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å‚Äù (callback_data="client_profile").
    2) –ù–∞–¥—Å–∏–ª–∞—î–º–æ —î–¥–∏–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è ‚Äú–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –≤–∞—à–æ—ó –∫–ª—É–±–Ω–æ—ó –∫–∞—Ä—Ç–∫–∏:‚Äù + –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É ‚Äú–ù–∞–∑–∞–¥/–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚Äù.
    3) –ó–±–µ—Ä—ñ–≥–∞—î–º–æ message_id —É context.user_data["base_msg_id"].
    """
    await update.callback_query.answer()

    text = "üí≥ –í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –≤–∞—à–æ—ó –∫–ª—É–±–Ω–æ—ó –∫–∞—Ä—Ç–∫–∏:"
    sent = await update.callback_query.message.reply_text(
        text,
        reply_markup=nav_buttons()
    )
    context.user_data["base_msg_id"] = sent.message_id
    return STEP_FIND_CARD_PHONE

async def find_card(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    1) –û–±—Ä–æ–±–∫–∞ –≤–≤–µ–¥–µ–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –∫–∞—Ä—Ç–∫–∏ (MessageHandler).
    2) –ù–∞–¥—Å–∏–ª–∞—î–º–æ –∞–¥–º—ñ–Ω—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–æ—é –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è:
       callback_data = f"admin_confirm_card:{user_id}:{card}"
    3) –†–µ–¥–∞–≥—É—î–º–æ (–∞–±–æ –Ω–∞–¥—Å–∏–ª–∞—î–º–æ, —è–∫—â–æ base_msg_id –≤—ñ–¥—Å—É—Ç–Ω—ñ–π) –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞
       –∑ —Ç–µ–∫—Å—Ç–æ–º ‚Äú–í–∞—à –∑–∞–ø–∏—Ç –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É. –û—á—ñ–∫—É–π—Ç–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è.‚Äù + nav_buttons().
    4) –û—á–∏—â–∞—î–º–æ context.user_data["base_msg_id"] —ñ –∑–∞–≤–µ—Ä—à—É—î–º–æ —Å—Ü–µ–Ω–∞—Ä—ñ–π (ConversationHandler.END).
    """
    card = update.message.text.strip()
    user_id = update.effective_user.id
    full_name = update.effective_user.full_name

    # 1) –ù–∞–¥—Å–∏–ª–∞—î–º–æ –∞–¥–º—ñ–Ω—É –∑–∞–ø–∏—Ç —ñ–∑ callback-–ø–æ—Å–∏–ª–∞–Ω–Ω—è–º –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
    kb = InlineKeyboardMarkup([[
        InlineKeyboardButton(
            "‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∫–∞—Ä—Ç–∫—É",
            callback_data=f"admin_confirm_card:{user_id}:{card}"
        )
    ]])
    await context.bot.send_message(
        chat_id=ADMIN_ID,
        text=(
            f"‚ÑπÔ∏è –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {full_name} (ID {user_id})\n"
            f"–≤–≤—ñ–≤ –∫–∞—Ä—Ç–∫—É: {card}\n"
            "–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö —ñ, —è–∫—â–æ –≤—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å ¬´‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∫–∞—Ä—Ç–∫—É¬ª."
        ),
        reply_markup=kb
    )

    # 2) –†–µ–¥–∞–≥—É—î–º–æ –±–∞–∑–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞ (–∞–±–æ –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –Ω–æ–≤–µ, —è–∫—â–æ base_msg_id –≤—ñ–¥—Å—É—Ç–Ω—ñ–π)
    base_id = context.user_data.get("base_msg_id")
    new_text = "‚úÖ –í–∞—à –∑–∞–ø–∏—Ç –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É. –û—á—ñ–∫—É–π—Ç–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è."
    if base_id:
        try:
            await context.bot.edit_message_text(
                chat_id=update.effective_chat.id,
                message_id=base_id,
                text=new_text,
                reply_markup=nav_buttons()
            )
        except BadRequest as e:
            # –Ü–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫—É, —è–∫—â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –∑–º—ñ–Ω–∏–ª–æ—Å—è
            if "Message is not modified" not in str(e):
                raise
    else:
        sent = await update.message.reply_text(
            new_text,
            reply_markup=nav_buttons()
        )
        context.user_data["base_msg_id"] = sent.message_id

    # 3) –û—á–∏—â–∞—î–º–æ base_msg_id, –±–æ —Å—Ü–µ–Ω–∞—Ä—ñ–π –∑–∞–≤–µ—Ä—à–∏–≤—Å—è
    context.user_data.pop("base_msg_id", None)
    return ConversationHandler.END

# ‚îÄ‚îÄ‚îÄ ConversationHandler –¥–ª—è —Å—Ü–µ–Ω–∞—Ä—ñ—é ‚Äú–ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å‚Äù ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
profile_conv = ConversationHandler(
    entry_points=[
        CallbackQueryHandler(start_profile, pattern=f"^{CB.CLIENT_PROFILE.value}$")
    ],
    states={
        STEP_FIND_CARD_PHONE: [
            MessageHandler(filters.TEXT & ~filters.COMMAND, find_card)
        ],
    },
    fallbacks=[
        # –Ø–∫—â–æ –∫–ª—ñ—î–Ω—Ç –Ω–∞—Ç–∏—Å–Ω–µ ‚Äú–ù–∞–∑–∞–¥‚Äù –∞–±–æ ‚Äú–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚Äù –ø—ñ–¥ —á–∞—Å —É–≤–µ–¥–µ–Ω–Ω—è –∫–∞—Ä—Ç–∫–∏,
        # –∑–∞–≤–µ—Ä—à—É—î–º–æ —Å—Ü–µ–Ω–∞—Ä—ñ–π –±–µ–∑ –ø–æ–º–∏–ª–æ–∫.
        CallbackQueryHandler(lambda u, c: ConversationHandler.END, pattern=f"^{CB.BACK.value}$"),
        CallbackQueryHandler(lambda u, c: ConversationHandler.END, pattern=f"^{CB.HOME.value}$"),
    ],
    per_chat=True,
)

def register_profile_handlers(app: Application) -> None:
    """
    –†–µ–≥—ñ—Å—Ç—Ä—É—î profile_conv —É –≥—Ä—É–ø—ñ 0, —â–æ–± —Ü–µ–π ConversationHandler –æ–±—Ä–æ–±–∏–≤  
    callback_data="client_profile" —Ä–∞–Ω—ñ—à–µ –∑–∞ –∑–∞–≥–∞–ª—å–Ω–∏–π navigation handler.
    """
    app.add_handler(profile_conv, group=0)
