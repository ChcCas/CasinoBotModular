# modules/handlers/profile.py

from telegram import Update
from telegram.ext import (
    CallbackQueryHandler,
    MessageHandler,
    ConversationHandler,
    filters,
    ContextTypes,
    Application
)
from modules.db import search_user            # <-- –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ search_user, –∞ –Ω–µ find_user
from modules.keyboards import nav_buttons, client_menu
from modules.states import (
    STEP_FIND_CARD_PHONE,
    STEP_CLIENT_AUTH,
)

async def start_profile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–í—Ö—ñ–¥ —ñ–∑ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è 'üîç –ü–æ—à—É–∫' —É –∫–ª—ñ—î–Ω—Ç—Å—å–∫–æ–º—É –º–µ–Ω—é."""
    await update.callback_query.answer()
    msg = await update.callback_query.message.reply_text(
        "üîç –í–≤–µ–¥—ñ—Ç—å ID –∞–±–æ –∫–∞—Ä—Ç–∫—É –¥–ª—è –ø–æ—à—É–∫—É:",
        reply_markup=nav_buttons()
    )
    context.user_data['base_msg_id'] = msg.message_id
    return STEP_FIND_CARD_PHONE

async def find_card(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–∫–∞ –≤–≤–µ–¥–µ–Ω–æ–≥–æ ID/–∫–∞—Ä—Ç–∫–∏: —Ä–µ–¥–∞–≥—É—î–º–æ –±–∞–∑–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è."""
    query = update.message.text.strip()
    user = search_user(query)   # <-- —Ç—É—Ç –≤–∏–∫–ª–∏–∫–∞—î–º–æ search_user()

    if user:
        text       = "‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞!"
        keyboard   = client_menu(is_admin=False)
        next_state = STEP_CLIENT_AUTH
    else:
        text       = "‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑:"
        keyboard   = nav_buttons()
        next_state = STEP_FIND_CARD_PHONE

    base_id = context.user_data.get('base_msg_id')
    if base_id:
        await context.bot.edit_message_text(
            text=text,
            chat_id=update.effective_chat.id,
            message_id=base_id,
            reply_markup=keyboard
        )
    else:
        await update.message.reply_text(text, reply_markup=keyboard)

    # –Ø–∫—â–æ —â–µ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ ‚Äî –ø—ñ–¥—Ç—è–≥—É—î–º–æ message_id, —â–æ–± –∑–∞–ª–∏—à–∏—Ç–∏ –≤ –æ–¥–Ω–æ–º—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ
    if next_state == STEP_FIND_CARD_PHONE:
        context.user_data['base_msg_id'] = base_id
    else:
        context.user_data.pop('base_msg_id', None)

    return next_state

def register_profile_handlers(app: Application) -> None:
    conv = ConversationHandler(
        entry_points=[CallbackQueryHandler(start_profile, pattern="^profile$")],
        states={
            STEP_FIND_CARD_PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, find_card)],
            STEP_CLIENT_AUTH:    [CallbackQueryHandler(lambda u, c: None)],  # —Ç—É—Ç –≤–∞—à—ñ –ø–æ–¥–∞–ª—å—à—ñ —Ö–µ–Ω–¥–ª–µ—Ä–∏
        },
        fallbacks=[],
        per_message=True
    )
    app.add_handler(conv)
