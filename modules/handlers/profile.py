import re
from telegram import Update
from telegram.ext import (
    ContextTypes,
    ConversationHandler,
    CallbackQueryHandler,
    MessageHandler,
    filters,
)
from modules.db import get_user, save_user
from keyboards import nav_buttons, main_menu
from states import (
    STEP_MENU,
    STEP_PROFILE_ENTER_CARD,
    STEP_PROFILE_ENTER_PHONE,
    STEP_FIND_CARD_PHONE,
)

# –°—Ç–∞—Ä—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
async def start_profile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.callback_query.answer()
    user = get_user(update.effective_user.id)
    if user:
        # –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ
        await update.callback_query.message.reply_text(
            "–í–∏ –≤–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ üëá",
            reply_markup=main_menu(is_admin=False, is_auth=True),
        )
        return STEP_MENU

    await update.callback_query.message.reply_text(
        "–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç–∫–∏ (4‚Äì7 —Ü–∏—Ñ—Ä):",
        reply_markup=nav_buttons(),
    )
    return STEP_PROFILE_ENTER_CARD

# –°—Ç–∞—Ä—Ç –ø–æ—à—É–∫—É –∫–∞—Ä—Ç–∫–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É
async def start_find_card(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.callback_query.answer()
    await update.callback_query.message.reply_text(
        "–í–≤–µ–¥—ñ—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω –¥–ª—è –ø–æ—à—É–∫—É –∫–∞—Ä—Ç–∫–∏:",
        reply_markup=nav_buttons(),
    )
    return STEP_FIND_CARD_PHONE

# –û–±—Ä–æ–±–∫–∞ –≤–≤–µ–¥–µ–Ω–æ–≥–æ –∫–∞—Ä—Ç–∫–æ–≤–æ–≥–æ –Ω–æ–º–µ—Ä–∞
async def profile_enter_card(update: Update, context: ContextTypes.DEFAULT_TYPE):
    card = re.sub(r"\D", "", update.message.text)
    if not (4 <= len(card) <= 7):
        await update.message.reply_text(
            "–ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –∫–∞—Ä—Ç–∫–∏. –ú–∞—î –±—É—Ç–∏ –≤—ñ–¥ 4 –¥–æ 7 —Ü–∏—Ñ—Ä.",
            reply_markup=nav_buttons(),
        )
        return STEP_PROFILE_ENTER_CARD

    context.user_data["card"] = card
    await update.message.reply_text(
        "–¢–µ–ø–µ—Ä –≤–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É (0XXXXXXXXX):",
        reply_markup=nav_buttons(),
    )
    return STEP_PROFILE_ENTER_PHONE

# –û–±—Ä–æ–±–∫–∞ –≤–≤–µ–¥–µ–Ω–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É –ø—Ä–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó
async def profile_enter_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    phone = re.sub(r"\D", "", update.message.text)
    if not (len(phone) == 10 and phone.startswith("0")):
        await update.message.reply_text(
            "–ù–µ–≤—ñ—Ä–Ω–∏–π —Ç–µ–ª–µ—Ñ–æ–Ω. –ú–∞—î –±—É—Ç–∏ 10 —Ü–∏—Ñ—Ä —ñ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 0.",
            reply_markup=nav_buttons(),
        )
        return STEP_PROFILE_ENTER_PHONE

    save_user(update.effective_user.id, context.user_data["card"], phone)
    await update.message.reply_text(
        "‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞!",
        reply_markup=main_menu(is_admin=False, is_auth=True),
    )
    return STEP_MENU

# –û–±—Ä–æ–±–∫–∞ –ø–æ—à—É–∫—É –∫–∞—Ä—Ç–∫–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É
async def profile_find_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    phone = re.sub(r"\D", "", update.message.text)
    # —Ç—É—Ç –≤–∞—à–∞ –ª–æ–≥—ñ–∫–∞ –ø–æ—à—É–∫—É –≤ –ë–î (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, get_user_by_phone)
    user = get_user_by_phone(phone)  # —Ä–µ–∞–ª—ñ–∑—É–π—Ç–µ —Å–∞–º—ñ –≤ modules/db.py
    if not user:
        await update.message.reply_text("–ù—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ", reply_markup=nav_buttons())
    else:
        await update.message.reply_text(f"–ö–∞—Ä—Ç–∫–∞: {user['card']}", reply_markup=nav_buttons())
    return STEP_MENU

def register_profile_handlers(app):
    conv = ConversationHandler(
        entry_points=[
            CallbackQueryHandler(start_profile,     pattern="^client_profile$"),
            CallbackQueryHandler(start_find_card,   pattern="^client_find_card$"),
        ],
        states={
            STEP_PROFILE_ENTER_CARD:    [MessageHandler(filters.TEXT & ~filters.COMMAND, profile_enter_card)],
            STEP_PROFILE_ENTER_PHONE:   [MessageHandler(filters.TEXT & ~filters.COMMAND, profile_enter_phone)],
            STEP_FIND_CARD_PHONE:       [MessageHandler(filters.TEXT & ~filters.COMMAND, profile_find_phone)],
            STEP_MENU:                  [],  # –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—å –≤ –≥–æ–ª–æ–≤–Ω–∏–π STEP_MENU
        },
        fallbacks=[
            CallbackQueryHandler(go_back,  pattern="^back$"),
            CallbackQueryHandler(go_home,  pattern="^home$"),
        ],
        allow_reentry=True,
    )
    app.add_handler(conv)