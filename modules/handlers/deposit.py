# modules/handlers/deposit.py

import sqlite3
import datetime
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackQueryHandler, MessageHandler, filters, ContextTypes
from modules.config import ADMIN_ID, DB_NAME
from modules.db import get_user

from states import (
    STEP_PROVIDER, STEP_PAYMENT, STEP_DEPOSIT_AMOUNT,
    STEP_GUEST_DEPOSIT_FILE, STEP_GUEST_DEPOSIT_CONFIRM,
    STEP_MENU
)

def register_deposit_handlers(app):
    # –û—Å–Ω–æ–≤–Ω–æ–π –≤—Ö–æ–¥ –≤ –ø–æ—Ç–æ–∫ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
    app.add_handler(
        CallbackQueryHandler(deposit_start, pattern="^deposit$"),
        group=0
    )
    # –ì–æ—Å—Ç—å –±–µ–∑ –∫–∞—Ä—Ç—ã
    app.add_handler(
        CallbackQueryHandler(guest_deposit_start, pattern="^guest_deposit$"),
        group=1
    )
    app.add_handler(
        CallbackQueryHandler(deposit_with_card_start, pattern="^deposit_with_card$"),
        group=1
    )
    # –í—ã–±–æ—Ä –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ (–¥–ª—è –æ–±–æ–∏—Ö –ø–æ—Ç–æ–∫–æ–≤ –ø–æ—Å–ª–µ deposit_with_card_start)
    app.add_handler(
        CallbackQueryHandler(deposit_process_provider, pattern="^(" + "|".join(["üèÜ CHAMPION","üé∞ SUPEROMATIC"]) + ")$"),
        group=2
    )
    # –í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
    app.add_handler(
        CallbackQueryHandler(deposit_process_payment, pattern="^(–ö–∞—Ä—Ç–∞|–ö—Ä–∏–ø—Ç–æ–ø–µ—Ä–µ–∫–∞–∑)$"),
        group=3
    )
    # –í–≤–æ–¥ —Å—É–º–º—ã
    app.add_handler(
        MessageHandler(filters.TEXT & ~filters.COMMAND, deposit_process_amount),
        group=4
    )
    # –ì–æ—Å—Ç—å –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–∞–π–ª
    app.add_handler(
        MessageHandler(filters.Document.ALL | filters.PHOTO | filters.VIDEO, guest_deposit_file),
        group=5
    )
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≥–æ—Å—Ç–µ–≤–æ–π –∑–∞—è–≤–∫–∏
    app.add_handler(
        CallbackQueryHandler(guest_deposit_confirm, pattern="^confirm_guest$"),
        group=6
    )

async def deposit_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–°—Ç–∞—Ä—Ç –ø–æ—Ç–æ–∫–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ë–î ‚Äî –¥–≤–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞, –∏–Ω–∞—á–µ —Ç–æ–ª—å–∫–æ –≥–æ—Å—Ç–µ–≤–æ–µ."""
    await update.callback_query.answer()
    user = get_user(update.effective_user.id)
    buttons = []
    if user:
        # –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π
        buttons.append([InlineKeyboardButton("üí≥ –ü–æ–ø–æ–≤–Ω–∏—Ç–∏ –∑ –∫–∞—Ä—Ç–æ—é", callback_data="deposit_with_card")])
    # –≥–æ—Å—Ç–µ–≤–æ–π
    buttons.append([InlineKeyboardButton("üéÆ –ü–æ–ø–æ–≤–Ω–∏—Ç–∏ –±–µ–∑ –∫–∞—Ä—Ç–∏", callback_data="guest_deposit")])
    # –Ω–∞–≤–∏–≥–∞—Ü–∏—è
    buttons.append([
        InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back"),
        InlineKeyboardButton("üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="home"),
    ])
    kb = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(
        "–í–∏–±–µ—Ä—ñ—Ç—å –≤–∞—Ä—ñ–∞–Ω—Ç –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è:",
        reply_markup=kb
    )
    return STEP_PROVIDER

async def deposit_with_card_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ—Ç–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–∞–π–¥–µ—Ä."""
    await update.callback_query.answer()
    buttons = [
        [InlineKeyboardButton(p, callback_data=p)] for p in ["üèÜ CHAMPION", "üé∞ SUPEROMATIC"]
    ]
    buttons.append([
        InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back"),
        InlineKeyboardButton("üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="home"),
    ])
    kb = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(
        "–û–±–µ—Ä—ñ—Ç—å –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞:",
        reply_markup=kb
    )
    return STEP_PROVIDER

async def deposit_process_provider(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –∏ –ø—Ä–æ—Å–∏–º —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã."""
    context.user_data["provider"] = update.callback_query.data
    await update.callback_query.answer()

    buttons = [
        [InlineKeyboardButton(p, callback_data=p)] for p in ["–ö–∞—Ä—Ç–∞", "–ö—Ä–∏–ø—Ç–æ–ø–µ—Ä–µ–∫–∞–∑"]
    ]
    buttons.append([
        InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back"),
        InlineKeyboardButton("üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="home"),
    ])
    kb = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(
        "–û–±–µ—Ä—ñ—Ç—å —Å–ø–æ—Å—ñ–± –æ–ø–ª–∞—Ç–∏:",
        reply_markup=kb
    )
    return STEP_PAYMENT

async def deposit_process_payment(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏ –ø—Ä–æ—Å–∏–º —Å—É–º–º—É."""
    context.user_data["payment"] = update.callback_query.data
    await update.callback_query.answer()
    buttons = [
        [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back")],
        [InlineKeyboardButton("üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="home")],
    ]
    kb = InlineKeyboardMarkup(buttons)

    await update.callback_query.message.reply_text(
        "–í–≤–µ–¥—ñ—Ç—å —Å—É–º—É –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è:",
        reply_markup=kb
    )
    return STEP_DEPOSIT_AMOUNT

async def deposit_process_amount(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É–º–º—É –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É –∞–¥–º–∏–Ω—É."""
    text = update.message.text.strip()
    if not text.isdigit() or int(text) <= 0:
        # –Ω–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞
        buttons = [
            [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back")],
            [InlineKeyboardButton("üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="home")],
        ]
        kb = InlineKeyboardMarkup(buttons)
        await update.message.reply_text("–ù–µ–≤—ñ—Ä–Ω–∞ —Å—É–º–∞.", reply_markup=kb)
        return STEP_DEPOSIT_AMOUNT

    amount = text
    user = get_user(update.effective_user.id)
    card = user[1] if user else "–ù/–î"
    provider = context.user_data["provider"]
    payment  = context.user_data["payment"]
    time_str = datetime.datetime.now().isoformat(sep=" ", timespec="seconds")

    text = (
        f"üÜï –ü–æ–ø–æ–≤–Ω–µ–Ω–Ω—è –≤—ñ–¥ {update.effective_user.full_name} ({update.effective_user.id}):\n"
        f"–ö–∞—Ä—Ç–∫–∞ –∫–ª—ñ—î–Ω—Ç–∞: {card}\n"
        f"–ü—Ä–æ–≤–∞–π–¥–µ—Ä: {provider}\n"
        f"–û–ø–ª–∞—Ç–∞: {payment}\n"
        f"–°—É–º–∞: {amount}\n"
        f"üïí {time_str}"
    )
    await context.bot.send_message(chat_id=ADMIN_ID, text=text)

    buttons = [
        [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back")],
        [InlineKeyboardButton("üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="home")],
    ]
    kb = InlineKeyboardMarkup(buttons)

    await update.message.reply_text("–ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º—ñ–Ω—É.", reply_markup=kb)
    return STEP_MENU

async def guest_deposit_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ—Ç–æ–∫ –≥–æ—Å—Ç–µ–≤–æ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: –ø—Ä–æ—Å–∏–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª."""
    await update.callback_query.answer()
    buttons = [
        [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back")],
        [InlineKeyboardButton("üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="home")],
    ]
    kb = InlineKeyboardMarkup(buttons)
    await update.callback_query.message.reply_text(
        "–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —Ñ–∞–π–ª –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è (—Å–∫—Ä—ñ–Ω—à–æ—Ç/—Ñ–æ—Ç–æ/–≤—ñ–¥–µ–æ):",
        reply_markup=kb
    )
    return STEP_GUEST_DEPOSIT_FILE

async def guest_deposit_file(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –≤ user_data –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å."""
    context.user_data["guest_file"] = update.message
    kb = InlineKeyboardMarkup([[
        InlineKeyboardButton("‚úÖ –ù–∞–¥—ñ—Å–ª–∞—Ç–∏", callback_data="confirm_guest")
    ]])
    await update.message.reply_text(
        "–ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –∑–∞—è–≤–∫–∏ –∞–¥–º—ñ–Ω—É:",
        reply_markup=kb
    )
    return STEP_GUEST_DEPOSIT_CONFIRM

async def guest_deposit_confirm(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –∞–¥–º–∏–Ω—É —Å –Ω—É–∂–Ω—ã–º –ø–æ–¥–ø–∏—Å—å—é."""
    user = update.effective_user
    file_msg = context.user_data["guest_file"]
    timestamp = datetime.datetime.now().isoformat(sep=" ", timespec="seconds")

    caption = (
        f"üéÆ –ì—ñ—Å—Ç—å ({user.full_name}, {user.id}) —Ö–æ—á–µ –ø–æ–ø–æ–≤–Ω–∏—Ç–∏ –±–µ–∑ –∫–∞—Ä—Ç–∏\n"
        f"–ö–∞—Ä—Ç–∫–∞ –∫–ª—ñ—î–Ω—Ç–∞: –°—Ç–∞–≤–∏—Ç–∏ –Ω–∞ –Ω–∞—à—É\n"
        f"–ü—Ä–æ–≤–∞–π–¥–µ—Ä: –ù/–î\n"
        f"üïí {timestamp}"
    )
    await file_msg.copy_to(ADMIN_ID, caption=caption)

    buttons = [
        [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back")],
        [InlineKeyboardButton("üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="home")],
    ]
    kb = InlineKeyboardMarkup(buttons)
    await update.callback_query.message.reply_text(
        "–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞.", reply_markup=kb
    )
    return STEP_MENU
