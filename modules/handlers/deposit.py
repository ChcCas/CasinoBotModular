import datetime
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ContextTypes,
    CallbackQueryHandler, MessageHandler, filters
)
from modules.db import get_user
from modules.config import ADMIN_ID
from keyboards import nav_buttons
from states import (
    STEP_PROVIDER, STEP_DEPOSIT_AMOUNT, STEP_MENU
)

def register_deposit_handlers(app):
    app.add_handler(CallbackQueryHandler(start_deposit, pattern="^DEPOSIT_START$"), group=0)
    app.add_handler(CallbackQueryHandler(process_deposit_option,
        pattern="^(WITH_CARD|NO_CARD)$"), group=1)
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, process_amount), group=2)

async def start_deposit(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.callback_query.answer()
    user = get_user(update.effective_user.id)
    buttons = []
    if user:
        buttons.append([InlineKeyboardButton("üí≥ –ó—ñ —Å–≤–æ—î—é –∫–∞—Ä—Ç–∫–æ—é",   callback_data="WITH_CARD")])
    buttons.append([InlineKeyboardButton("üéÆ –ë–µ–∑ –∫–∞—Ä—Ç–∏ (–≥—ñ—Å—Ç—å)", callback_data="NO_CARD")])
    buttons.append([InlineKeyboardButton("üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é",     callback_data="NAV_HOME")])
    await update.callback_query.message.reply_text(
        "–û–±—Ä–∞—Ç–∏ —Ç–∏–ø –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è:", InlineKeyboardMarkup(buttons)
    )
    return STEP_PROVIDER

async def process_deposit_option(update: Update, context: ContextTypes.DEFAULT_TYPE):
    data = update.callback_query.data
    await update.callback_query.answer()
    context.user_data["guest"] = (data == "NO_CARD")
    await update.callback_query.message.reply_text(
        "–í–≤–µ–¥—ñ—Ç—å —Å—É–º—É –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è:",
        reply_markup=nav_buttons()
    )
    return STEP_DEPOSIT_AMOUNT

async def process_amount(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.strip()
    if not text.isdigit() or int(text) <= 0:
        await update.message.reply_text("–ù–µ–≤—ñ—Ä–Ω–∞ —Å—É–º–∞.", reply_markup=nav_buttons())
        return STEP_DEPOSIT_AMOUNT

    user = get_user(update.effective_user.id)
    card = user[1] if user and not context.user_data.get("guest") else "–ù/–î"
    ts   = datetime.datetime.now().isoformat(sep=" ", timespec="seconds")
    msg  = (
        f"üÜï –ü–æ–ø–æ–≤–Ω–µ–Ω–Ω—è –≤—ñ–¥ {update.effective_user.full_name} ({update.effective_user.id}):\n"
        f"–ö–∞—Ä—Ç–∫–∞: {card}\n"
        f"–°—É–º–∞: {text}\n"
        f"üïí {ts}"
    )
    await context.bot.send_message(chat_id=ADMIN_ID, text=msg)
    await update.message.reply_text(
        "–ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º—ñ–Ω—É.",
        reply_markup=nav_buttons()
    )
    return STEP_MENU
