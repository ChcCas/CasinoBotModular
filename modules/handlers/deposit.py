# modules/handlers/deposit.py

import sqlite3
from telegram import Update
from telegram.ext import CallbackQueryHandler, MessageHandler, filters, ContextTypes

from modules.config import ADMIN_ID, DB_NAME
from keyboards import provider_buttons, payment_buttons, nav_buttons
from states import (
    STEP_PROVIDER,
    STEP_PAYMENT,
    STEP_DEPOSIT_AMOUNT,
    STEP_MENU,
)

def register_deposit_handlers(app):
    # –∞) –ø–æ—á–∞—Ç–æ–∫ —Ñ–ª–æ—É: –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è ‚Äúüí∞ –ü–æ–ø–æ–≤–Ω–∏—Ç–∏‚Äù
    app.add_handler(
        CallbackQueryHandler(deposit_start, pattern="^deposit$"),
        group=0
    )
    # –±) –≤–∏–±—ñ—Ä –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
    app.add_handler(
        CallbackQueryHandler(
            deposit_process_provider,
            pattern="^(" + "|".join(provider_buttons().to_dict()['inline_keyboard'][0][i]['callback_data']
                                 for i in range(len(provider_buttons().to_dict()['inline_keyboard'][0]))) + ")$"
        ),
        group=1
    )
    # –≤) –≤–∏–±—ñ—Ä —Å–ø–æ—Å–æ–±—É –æ–ø–ª–∞—Ç–∏
    app.add_handler(
        CallbackQueryHandler(deposit_process_payment, pattern="^(–ö–∞—Ä—Ç–∞|–ö—Ä–∏–ø—Ç–æ–ø–µ—Ä–µ–∫–∞–∑)$"),
        group=2
    )
    # –≥) –≤–≤–µ–¥–µ–Ω–Ω—è —Å—É–º–∏
    app.add_handler(
        MessageHandler(filters.TEXT & ~filters.COMMAND, deposit_process_amount),
        group=3
    )

async def deposit_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–°—Ç–∞—Ä—Ç —Ñ–ª–æ—É –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è: –ø–æ–∫–∞–∑—É—î–º–æ —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ñ–≤."""
    await update.callback_query.answer()
    await update.callback_query.message.reply_text(
        "–û–±–µ—Ä—ñ—Ç—å –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –¥–ª—è –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è:",
        reply_markup=provider_buttons()
    )
    return STEP_PROVIDER

async def deposit_process_provider(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü—ñ—Å–ª—è –≤–∏–±–æ—Ä—É –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ ‚Äî –ø—Ä–æ—Å–∏–º–æ —Å–ø–æ—Å—ñ–± –æ–ø–ª–∞—Ç–∏."""
    provider = update.callback_query.data
    context.user_data["deposit_provider"] = provider
    await update.callback_query.answer()
    await update.callback_query.message.reply_text(
        f"–í–∏ –æ–±—Ä–∞–ª–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ {provider}. –¢–µ–ø–µ—Ä –æ–±–µ—Ä—ñ—Ç—å —Å–ø–æ—Å—ñ–± –æ–ø–ª–∞—Ç–∏:",
        reply_markup=payment_buttons()
    )
    return STEP_PAYMENT

async def deposit_process_payment(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü—ñ—Å–ª—è –≤–∏–±–æ—Ä—É —Å–ø–æ—Å–æ–±—É ‚Äî –ø—Ä–æ—Å–∏–º–æ —Å—É–º—É."""
    payment = update.callback_query.data
    context.user_data["deposit_payment"] = payment
    await update.callback_query.answer()
    await update.callback_query.message.reply_text(
        f"–°–ø–æ—Å—ñ–± –æ–ø–ª–∞—Ç–∏: {payment}. –í–≤–µ–¥—ñ—Ç—å —Å—É–º—É –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è (—Ü—ñ–ª–µ —á–∏—Å–ª–æ):",
        reply_markup=nav_buttons()
    )
    return STEP_DEPOSIT_AMOUNT

async def deposit_process_amount(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç—Ä–∏–º—É—î–º–æ —Å—É–º—É, –¥—ñ—Å—Ç–∞—î–º–æ –∫–∞—Ä—Ç–∫—É –∑ –ë–î —ñ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∞–¥–º—ñ–Ω—É –∑–∞—è–≤–∫—É."""
    text = update.message.text.strip()
    if not text.isdigit() or int(text) <= 0:
        await update.message.reply_text(
            "–ù–µ–≤—ñ—Ä–Ω–∞ —Å—É–º–∞ ‚Äî –≤–≤–µ–¥—ñ—Ç—å –±—É–¥—å –ª–∞—Å–∫–∞ –ø–æ–∑–∏—Ç–∏–≤–Ω–µ —á–∏—Å–ª–æ.",
            reply_markup=nav_buttons()
        )
        return STEP_DEPOSIT_AMOUNT

    amount = int(text)
    user_id = update.effective_user.id

    # –¥—ñ—Å—Ç–∞—î–º–æ –∫–∞—Ä—Ç–∫—É –∑ –±–∞–∑–∏
    with sqlite3.connect(DB_NAME) as conn:
        cur = conn.execute(
            "SELECT card FROM users WHERE user_id = ?",
            (user_id,)
        )
        row = cur.fetchone()

    if not row:
        # —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π
        await update.message.reply_text(
            "–í–∏ —â–µ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑—É–≤–∞–ª–∏—Å—è –≤ –ø—Ä–æ—Ñ—ñ–ª—ñ. –°–ø–æ—á–∞—Ç–∫—É –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å ¬´–ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å¬ª.",
            reply_markup=nav_buttons()
        )
        return STEP_MENU

    card = row[0]
    provider = context.user_data.get("deposit_provider")
    payment = context.user_data.get("deposit_payment")

    # —Ñ–æ—Ä–º—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—É
    msg = (
        f"üÜï –ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è –≤—ñ–¥ {update.effective_user.full_name} ({user_id}):\n"
        f"‚Ä¢ –ö–∞—Ä—Ç–∫–∞: {card}\n"
        f"‚Ä¢ –ü—Ä–æ–≤–∞–π–¥–µ—Ä: {provider}\n"
        f"‚Ä¢ –û–ø–ª–∞—Ç–∞: {payment}\n"
        f"‚Ä¢ –°—É–º–∞: {amount}"
    )
    await context.bot.send_message(chat_id=ADMIN_ID, text=msg)

    await update.message.reply_text(
        "–í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É üëç",
        reply_markup=nav_buttons()
    )
    return STEP_MENU
