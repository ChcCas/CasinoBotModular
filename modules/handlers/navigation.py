# modules/handlers/navigation.py

import sqlite3
from telegram import Update
from telegram.error import BadRequest
from telegram.ext import CallbackQueryHandler, ContextTypes, Application
from modules.config import DB_NAME
from modules.callbacks import CB
from modules.keyboards import nav_buttons
from modules.states import (
    STEP_MENU,
    STEP_DEPOSIT_AMOUNT,
    STEP_WITHDRAW_AMOUNT,
    STEP_REG_NAME,
    STEP_ADMIN_SEARCH,
    STEP_ADMIN_BROADCAST
)
from .start import start_command
from .admin import show_admin_panel

def _init_threads():
    with sqlite3.connect(DB_NAME) as conn:
        conn.execute("""
        CREATE TABLE IF NOT EXISTS threads (
            user_id INTEGER PRIMARY KEY,
            base_msg_id INTEGER
        )
        """)
        conn.commit()

async def menu_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ó–∞–≥–∞–ª—å–Ω–∏–π —Ä–æ—É—Ç–µ—Ä (–≥—Ä—É–ø–∞ 1) –¥–ª—è –≤—Å—ñ—Ö callback_query, —è–∫—ñ –Ω–µ
    ‚Äú–ø—ñ–¥—Ö–æ–ø–ª–µ–Ω—ñ‚Äù —É –≥—Ä—É–ø—ñ 0 (ConversationHandler‚Äô–∞–º–∏).
    1) –Ø–∫—â–æ callback_data –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –ø–æ—á–∞—Ç–∫—É Conversation (client_profile, deposit_start, withdraw_start, admin_search, admin_broadcast) ‚Äî –ø—Ä–æ—Å—Ç–æ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ None.
    2) –Ø–∫—â–æ ‚Äúadmin_panel‚Äù ‚Äî –≤–∏–∫–ª–∏–∫–∞—î–º–æ show_admin_panel.
    3) –Ø–∫—â–æ ‚Äúhome‚Äù –∞–±–æ ‚Äúback‚Äù ‚Äî –≤–∏–∫–ª–∏–∫–∞—î–º–æ start_command.
    4) –Ø–∫—â–æ ‚Äúhelp‚Äù ‚Äî —Ä–µ–¥–∞–≥—É—î–º–æ –∞–±–æ –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —Ç–µ–∫—Å—Ç–æ–º –¥–æ–ø–æ–º–æ–≥–∏.
    5) –Ü–Ω–∞–∫—à–µ ‚Äî –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ start_command.
    """
    query = update.callback_query
    data = query.data
    await query.answer()

    # 1) –ê–¥–º—ñ–Ω –Ω–∞—Ç–∏—Å–Ω—É–≤ ‚Äúüõ† –ê–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å‚Äù
    if data == "admin_panel":
        return await show_admin_panel(update, context)

    # 2) –Ø–∫—â–æ —Ü–µ –ø–æ—á–∞—Ç–æ–∫ ConversationHandler (–≥—Ä—É–ø–∞ 0) ‚Äî —ñ–≥–Ω–æ—Ä—É—î–º–æ —Ç—É—Ç
    if data in (
        CB.CLIENT_PROFILE.value,   # client_profile
        CB.DEPOSIT_START.value,    # deposit_start
        CB.WITHDRAW_START.value,   # withdraw_start
        CB.ADMIN_SEARCH.value,     # admin_search
        CB.ADMIN_BROADCAST.value   # admin_broadcast
    ):
        return

    # 3) –Ø–∫—â–æ ‚Äú–ù–∞–∑–∞–¥‚Äù —á–∏ ‚Äú–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚Äù
    if data in (CB.HOME.value, CB.BACK.value):
        return await start_command(update, context)

    # 4) ‚Äú–î–æ–ø–æ–º–æ–≥–∞‚Äù
    if data == CB.HELP.value:
        text = "‚ÑπÔ∏è –î–æ–ø–æ–º–æ–≥–∞:\n/start ‚Äî –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ –±–æ—Ç–∞\nüì≤ –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏, —è–∫—â–æ —î –ø–∏—Ç–∞–Ω–Ω—è."
        base_id = context.user_data.get("base_msg_id")
        if base_id:
            try:
                await context.bot.edit_message_text(
                    chat_id=update.effective_chat.id,
                    message_id=base_id,
                    text=text,
                    reply_markup=nav_buttons()
                )
            except BadRequest as e:
                msg = str(e)
                if "Message to edit not found" in msg or "Message is not modified" in msg:
                    sent = await update.callback_query.message.reply_text(
                        text,
                        reply_markup=nav_buttons()
                    )
                    context.user_data["base_msg_id"] = sent.message_id
                else:
                    raise
        else:
            sent = await update.callback_query.message.reply_text(
                text,
                reply_markup=nav_buttons()
            )
            context.user_data["base_msg_id"] = sent.message_id
        return STEP_MENU

    # 5) –í —É—Å—ñ—Ö —ñ–Ω—à–∏—Ö –≤–∏–ø–∞–¥–∫–∞—Ö –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
    return await start_command(update, context)

def register_navigation_handlers(app: Application):
    """
    –†–µ–≥—ñ—Å—Ç—Ä—É—î–º–æ –∑–∞–≥–∞–ª—å–Ω–∏–π –Ω–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω–∏–π —Ä–æ—É—Ç–µ—Ä (–≥—Ä—É–ø–∞ 1):
      1) CallbackQueryHandler(start_command, pattern="^home$")
      2) CallbackQueryHandler(start_command, pattern="^back$")
      3) CallbackQueryHandler(menu_handler, pattern=".*")
    –£—Å—ñ ConversationHandler-–∏ (–≥—Ä—É–ø–∞ 0) –º–∞—é—Ç—å –±—É—Ç–∏ –¥–æ–¥–∞–Ω—ñ —Ä–∞–Ω—ñ—à–µ.
    """
    _init_threads()

    app.add_handler(
        CallbackQueryHandler(start_command, pattern="^home$"),
        group=1
    )
    app.add_handler(
        CallbackQueryHandler(start_command, pattern="^back$"),
        group=1
    )
    app.add_handler(
        CallbackQueryHandler(menu_handler, pattern=".*"),
        group=1
    )
