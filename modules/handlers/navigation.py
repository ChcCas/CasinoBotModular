# modules/handlers/navigation.py

import sqlite3
from telegram import Update
from telegram.ext import (
    CallbackQueryHandler,
    ContextTypes,
    Application
)
from modules.config import DB_NAME
from modules.callbacks import CB
from modules.keyboards import nav_buttons
from modules.states import (
    STEP_MENU,
    STEP_ADMIN_SEARCH,
    STEP_ADMIN_BROADCAST
)
from .start import start_command
from .admin import show_admin_panel

def _init_threads():
    with sqlite3.connect(DB_NAME) as conn:
        conn.execute("""
        CREATE TABLE IF NOT EXISTS threads (
            user_id INTEGER PRIMARY KEY,
            base_msg_id INTEGER
        )
        """)
        conn.commit()

async def menu_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    data = query.data
    await query.answer()

    # 1) –Ø–∫—â–æ —Ü–µ ¬´client_profile¬ª –∞–±–æ ¬´client_find¬ª ‚Üí –¥–∞—î–º–æ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å profile_conv —Å–ø—Ä–∞—Ü—é–≤–∞—Ç–∏
    if data in (CB.CLIENT_PROFILE.value, CB.CLIENT_FIND.value):
        return None

    # 2) –Ø–∫—â–æ —Ü–µ ¬´deposit_start¬ª –∞–±–æ ¬´withdraw_start¬ª ‚Üí –¥–∞—î–º–æ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ–º—É ConvHandler —Å–ø—Ä–∞—Ü—é–≤–∞—Ç–∏
    if data in (CB.DEPOSIT_START.value, CB.WITHDRAW_START.value):
        return None

    # 3) –ê–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å
    if data == CB.ADMIN_PANEL.value:
        return await show_admin_panel(update, context)

    # 4) ¬´–ù–∞–∑–∞–¥¬ª / ¬´–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é¬ª
    if data in (CB.HOME.value, CB.BACK.value):
        return await start_command(update, context)

    # 5) –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è
    if data == CB.REGISTER.value:
        return None  # –Ω–µ—Ö–∞–π Registration ConvHandler —Å–ø—Ä–∞—Ü—é—î

    # 6) –î–æ–ø–æ–º–æ–≥–∞
    if data == CB.HELP.value:
        await query.message.reply_text(
            "‚ÑπÔ∏è –î–æ–ø–æ–º–æ–≥–∞:\n"
            "/start ‚Äî –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫\n"
            "üì≤ –ü–∏—Ç–∞–Ω–Ω—è ‚Äî —á–µ—Ä–µ–∑ —á–∞—Ç –∑ –∞–¥–º—ñ–Ω–æ–º",
            reply_markup=nav_buttons()
        )
        return STEP_MENU

    # 7) –ê–¥–º—ñ–Ω: –ü–æ—à—É–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    if data == CB.ADMIN_SEARCH.value:
        return STEP_ADMIN_SEARCH

    # 8) –ê–¥–º—ñ–Ω: –†–æ–∑—Å–∏–ª–∫–∞
    if data == CB.ADMIN_BROADCAST.value:
        return STEP_ADMIN_BROADCAST

    # 9) –Ø–∫—â–æ –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–±—ñ–≥–ª–æ—Å—è ‚Äî –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –≤ /start
    return await start_command(update, context)

def register_navigation_handlers(app: Application):
    _init_threads()

    # –°–ø–µ—Ä—à—É –ª–æ–≤–∏–º–æ ‚Äúhome‚Äù / ‚Äúback‚Äù (—â–æ–± –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ /start)
    app.add_handler(
        CallbackQueryHandler(start_command, pattern=f"^{CB.HOME.value}$"),
        group=1
    )
    app.add_handler(
        CallbackQueryHandler(start_command, pattern=f"^{CB.BACK.value}$"),
        group=1
    )

    # –î–∞–ª—ñ ‚Äî —É—Å—ñ —ñ–Ω—à—ñ CallbackQuery ‚Üí menu_handler
    app.add_handler(
        CallbackQueryHandler(menu_handler, pattern=".*"),
        group=1
    )
