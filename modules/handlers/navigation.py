import re
import sqlite3
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import (
    CallbackQueryHandler,
    ContextTypes,
    Application,
)
from modules.config import DB_NAME
from modules.callbacks import CB
from modules.keyboards import (
    PROVIDERS,
    PAYMENTS,
    nav_buttons,
    provider_buttons,
    payment_buttons,
    admin_panel_kb,
)
from modules.states import (
    STEP_MENU,
    STEP_DEPOSIT_AMOUNT,
    STEP_WITHDRAW_AMOUNT,
    STEP_REG_NAME,
    STEP_ADMIN_SEARCH,
    STEP_ADMIN_BROADCAST,
)
from .start import start_command
from .admin import show_admin_panel
from .profile import start_profile

# –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–µ—Å—Ç–∏ —Ç–∞–±–ª–∏—Ü—é threads (–∑–∞—Ä–∞–∑ –ø—Ä–æ—î–∫—Ç –æ–±—Ö–æ–¥–∏—Ç—å—Å—è –±–µ–∑ –Ω–µ—ó,
# –∞–ª–µ –∑–∞–ª–∏—à–∞—é –∑–∞–≥–æ—Ç—ñ–≤–∫—É –Ω–∞ –º–∞–π–±—É—Ç–Ω—î):
def _init_threads():
    with sqlite3.connect(DB_NAME) as conn:
        conn.execute("""
        CREATE TABLE IF NOT EXISTS threads (
            user_id INTEGER PRIMARY KEY,
            base_msg_id INTEGER
        )
        """)
        conn.commit()

async def menu_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û—Å–Ω–æ–≤–Ω–∞ –ª–æ–≥—ñ–∫–∞ —Ä–æ—É—Ç–∏–Ω–≥—É –¥–ª—è –≤—Å—ñ—Ö callback_query, —â–æ –Ω–µ –ø–æ—Ç—Ä–∞–ø–∏–ª–∏ —É ConversationHandler-–∏.
    """
    query = update.callback_query
    data = query.data
    await query.answer()

    # ‚îÄ‚îÄ‚îÄ –ê–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å ‚îÄ‚îÄ‚îÄ
    if data == "admin_panel":
        return await show_admin_panel(update, context)

    # ‚îÄ‚îÄ‚îÄ –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è ¬´–¥–æ–¥–æ–º—É¬ª –∞–±–æ ¬´–Ω–∞–∑–∞–¥¬ª ‚îÄ‚îÄ‚îÄ
    if data in (CB.HOME.value, CB.BACK.value):
        return await start_command(update, context)

    # ‚îÄ‚îÄ‚îÄ ¬´–ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å¬ª (—è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∫–ª—ñ–∫–Ω—É–≤ —Ç—É—Ç, –∞–ª–µ –Ω–µ –≤ ConversationHandler) ‚îÄ‚îÄ‚îÄ
    if data == CB.CLIENT_PROFILE.value:
        return await start_profile(update, context)

    # ‚îÄ‚îÄ‚îÄ –ü–æ–ø–æ–≤–Ω–µ–Ω–Ω—è ‚îÄ‚îÄ‚îÄ
    if data == CB.DEPOSIT_START.value:
        await query.message.reply_text("üí∏ –í–≤–µ–¥—ñ—Ç—å —Å—É–º—É –¥–ª—è –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è:", reply_markup=nav_buttons())
        return STEP_DEPOSIT_AMOUNT

    # ‚îÄ‚îÄ‚îÄ –í–∏–≤–µ–¥–µ–Ω–Ω—è –∫–æ—à—Ç—ñ–≤ ‚îÄ‚îÄ‚îÄ
    if data == CB.WITHDRAW_START.value:
        await query.message.reply_text("üí≥ –í–≤–µ–¥—ñ—Ç—å —Å—É–º—É –¥–ª—è –≤–∏–≤–µ–¥–µ–Ω–Ω—è:", reply_markup=nav_buttons())
        return STEP_WITHDRAW_AMOUNT

    # ‚îÄ‚îÄ‚îÄ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è ‚îÄ‚îÄ‚îÄ
    if data == "register":
        await query.message.reply_text("üìù –í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º‚Äô—è:", reply_markup=nav_buttons())
        return STEP_REG_NAME

    # ‚îÄ‚îÄ‚îÄ –î–æ–ø–æ–º–æ–≥–∞ ‚îÄ‚îÄ‚îÄ
    if data == CB.HELP.value:
        await query.message.reply_text("‚ÑπÔ∏è –î–æ–ø–æ–º–æ–≥–∞:\n/start ‚Äî –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫\nüì≤ –ü–∏—Ç–∞–Ω–Ω—è ‚Äî —á–µ—Ä–µ–∑ —á–∞—Ç", reply_markup=nav_buttons())
        return STEP_MENU

    # ‚îÄ‚îÄ‚îÄ –ê–¥–º—ñ–Ω: –ø–æ—à—É–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ‚îÄ‚îÄ‚îÄ
    if data == CB.ADMIN_SEARCH.value:
        await query.message.reply_text("üîç –í–≤–µ–¥—ñ—Ç—å ID –∞–±–æ –∫–∞—Ä—Ç–∫—É –¥–ª—è –ø–æ—à—É–∫—É:", reply_markup=nav_buttons())
        return STEP_ADMIN_BROADCAST

    # ‚îÄ‚îÄ‚îÄ –ê–¥–º—ñ–Ω: —Ä–æ–∑—Å–∏–ª–∫–∞ ‚îÄ‚îÄ‚îÄ
    if data == CB.ADMIN_BROADCAST.value:
        await query.message.reply_text("üì¢ –í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–æ–∑—Å–∏–ª–∫–∏:", reply_markup=nav_buttons())
        return STEP_MENU

    # ‚îÄ‚îÄ‚îÄ –Ø–∫—â–æ –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–±—ñ–≥–ª–æ—Å—è ‚Äî –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –≤ –º–µ–Ω—é
    return await start_command(update, context)

def register_navigation_handlers(app: Application):
    """
    –†–µ—î—Å—Ç—Ä—É—î –∑–∞–≥–∞–ª—å–Ω–∏–π CallbackQueryHandler –¥–ª—è –≤—Å—ñ—Ö –Ω–µ–≤–ø—ñ–π–º–∞–Ω–∏—Ö –∫–Ω–æ–ø–æ–∫ (–≥—Ä—É–ø–∞=1).
    """
    _init_threads()

    # –†–µ—î—Å—Ç—Ä—É—î–º–æ ¬´–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é¬ª / ¬´–ù–∞–∑–∞–¥¬ª
    app.add_handler(CallbackQueryHandler(start_command, pattern="^home$"), group=1)
    app.add_handler(CallbackQueryHandler(start_command, pattern="^back$"), group=1)

    # –û—Å–Ω–æ–≤–Ω–∏–π —Ä–æ—É—Ç–µ—Ä –¥–ª—è –≤—Å—ñ—Ö —ñ–Ω—à–∏—Ö callback_data ‚Üí menu_handler
    app.add_handler(CallbackQueryHandler(menu_handler, pattern=".*"), group=1)
