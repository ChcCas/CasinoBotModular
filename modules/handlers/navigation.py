# modules/handlers/navigation.py

import re
import sqlite3
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import (
    CallbackQueryHandler,
    CommandHandler,
    ContextTypes,
    Application
)
from modules.config import ADMIN_ID, DB_NAME
from modules.callbacks import CB
from modules.keyboards import (
    PROVIDERS,
    PAYMENTS,
    nav_buttons,
    provider_buttons,
    payment_buttons,
    admin_panel_kb
)
from modules.states import (
    STEP_MENU,
    STEP_DEPOSIT_AMOUNT,
    STEP_WITHDRAW_AMOUNT,
    STEP_REG_NAME,
    STEP_ADMIN_SEARCH,
    STEP_ADMIN_BROADCAST
)
from .start import start_command
from .admin import show_admin_panel

# === –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Ç–∞–±–ª–∏—Ü—ñ threads ===
def _init_threads():
    with sqlite3.connect(DB_NAME) as conn:
        conn.execute("""
        CREATE TABLE IF NOT EXISTS threads (
            user_id INTEGER PRIMARY KEY,
            base_msg_id INTEGER
        )
        """)
        conn.commit()

# === –û—Å–Ω–æ–≤–Ω–∞ –ª–æ–≥—ñ–∫–∞ –º–µ–Ω—é (Router –¥–ª—è –≤—Å—ñ—Ö callback_query) ===
async def menu_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    data = query.data
    await query.answer()

    # ‚îÄ‚îÄ‚îÄ –ê–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å ‚îÄ‚îÄ‚îÄ
    if data == "admin_panel":
        return await show_admin_panel(update, context)

    # ‚îÄ‚îÄ‚îÄ –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è ¬´–¥–æ–¥–æ–º—É¬ª –∞–±–æ ¬´–Ω–∞–∑–∞–¥¬ª ‚îÄ‚îÄ‚îÄ
    if data in (CB.HOME.value, CB.BACK.value):
        return await start_command(update, context)

    # ‚îÄ‚îÄ‚îÄ –ü–æ–ø–æ–≤–Ω–µ–Ω–Ω—è ‚îÄ‚îÄ‚îÄ
    if data == "deposit":
        await query.message.reply_text(
            "üí∏ –í–≤–µ–¥—ñ—Ç—å —Å—É–º—É –¥–ª—è –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è:", reply_markup=nav_buttons()
        )
        return STEP_DEPOSIT_AMOUNT

    # ‚îÄ‚îÄ‚îÄ –í–∏–≤–µ–¥–µ–Ω–Ω—è –∫–æ—à—Ç—ñ–≤ ‚îÄ‚îÄ‚îÄ
    if data in ("withdraw", CB.WITHDRAW_START.value):
        await query.message.reply_text(
            "üí≥ –í–≤–µ–¥—ñ—Ç—å —Å—É–º—É –¥–ª—è –≤–∏–≤–µ–¥–µ–Ω–Ω—è:", reply_markup=nav_buttons()
        )
        return STEP_WITHDRAW_AMOUNT

    # ‚îÄ‚îÄ‚îÄ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è ‚îÄ‚îÄ‚îÄ
    if data == "register":
        await query.message.reply_text(
            "üìù –í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º‚Äô—è:", reply_markup=nav_buttons()
        )
        return STEP_REG_NAME

    # ‚îÄ‚îÄ‚îÄ –î–æ–ø–æ–º–æ–≥–∞ ‚îÄ‚îÄ‚îÄ
    if data == CB.HELP.value:
        await query.message.reply_text(
            "‚ÑπÔ∏è –î–æ–ø–æ–º–æ–≥–∞:\n/start ‚Äî –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫\nüì≤ –ü–∏—Ç–∞–Ω–Ω—è ‚Äî —á–µ—Ä–µ–∑ —á–∞—Ç",
            reply_markup=nav_buttons()
        )
        return STEP_MENU

    # ‚îÄ‚îÄ‚îÄ –ê–¥–º—ñ–Ω: –ø–æ—à—É–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ‚îÄ‚îÄ‚îÄ
    if data == "admin_search":
        return STEP_ADMIN_SEARCH

    # ‚îÄ‚îÄ‚îÄ –ê–¥–º—ñ–Ω: —Ä–æ–∑—Å–∏–ª–∫–∞ ‚îÄ‚îÄ‚îÄ
    if data == "admin_broadcast":
        return STEP_ADMIN_BROADCAST

    # ‚îÄ‚îÄ‚îÄ –Ø–∫—â–æ –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–±—ñ–≥–ª–æ—Å—å ‚îÄ‚îÄ‚îÄ
    return await start_command(update, context)

# === –†–µ—î—Å—Ç—Ä—É—î–º–æ –∑–∞–≥–∞–ª—å–Ω–∏–π —Ä–æ—É—Ç–µ—Ä —É –≥—Ä—É–ø—ñ 1 ===
def register_navigation_handlers(app: Application):
    _init_threads()

    # –ö–æ–º–∞–Ω–¥–∞ /start —Ç–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ ‚Äúhome‚Äù/‚Äúback‚Äù –≤–∏–∫–ª–∏–∫–∞—î start_command
    app.add_handler(
        CommandHandler("start", start_command),
        group=1
    )
    app.add_handler(
        CallbackQueryHandler(start_command, pattern="^home$"),
        group=1
    )
    app.add_handler(
        CallbackQueryHandler(start_command, pattern="^back$"),
        group=1
    )

    # –û—Å–Ω–æ–≤–Ω–∏–π menu_handler –ª–æ–≤–∏—Ç—å —É—Å—ñ —ñ–Ω—à—ñ callback_query
    app.add_handler(
        CallbackQueryHandler(menu_handler, pattern=".*"),
        group=1
    )
