# modules/handlers/withdraw.py

import datetime
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    CallbackQueryHandler,
    MessageHandler,
    filters,
    ContextTypes,
)

from modules.config import ADMIN_ID
from modules.db import get_user
from keyboards import nav_buttons, main_menu
from states import (
    STEP_WITHDRAW_START,
    STEP_WITHDRAW_AMOUNT,
    STEP_WITHDRAW_CONFIRM,
    STEP_MENU,
)

def register_withdraw_handlers(app):
    # 1) –¢–æ—á–∫–∞ –≤—Ö–æ–¥—É ‚Äî —Ç—ñ–ª—å–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ –∫–ª—ñ—î–Ω—Ç–∏
    app.add_handler(
        CallbackQueryHandler(withdraw_start, pattern="^WITHDRAW_START$"),
        group=0,
    )
    # 2) –ö–ª—ñ—î–Ω—Ç –≤–≤–æ–¥–∏—Ç—å —Å—É–º—É
    app.add_handler(
        MessageHandler(filters.TEXT & ~filters.COMMAND, withdraw_amount),
        group=1,
    )
    # 3) –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —ñ –≤—ñ–¥–ø—Ä–∞–≤–∫–∞ –∞–¥–º—ñ–Ω—É
    app.add_handler(
        CallbackQueryHandler(withdraw_confirm, pattern="^CONFIRM_WITHDRAW$"),
        group=2,
    )


async def withdraw_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ '–í–∏–≤—ñ–¥ –∫–æ—à—Ç—ñ–≤'.
    –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –∫–ª—ñ—î–Ω—Ç –≤ –ë–î (—Ç–æ–±—Ç–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π),
    —ñ —è–∫—â–æ —Ç–∞–∫ ‚Äî –ø—Ä–æ–ø–æ–Ω—É—î–º–æ –≤–≤–µ—Å—Ç–∏ —Å—É–º—É.
    """
    user_id = update.effective_user.id
    await update.callback_query.answer()

    row = get_user(user_id)
    if not row:
        # –Ø–∫—â–æ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π ‚Äî –∫–∏–¥–∞—î–º–æ –Ω–∞–∑–∞–¥ —É –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –∑ –ø—Ä–æ—Ö–∞–Ω–Ω—è–º –∞–≤—Ç–æ—Ä–∏–∑—É–≤–∞—Ç–∏—Å—è
        await update.callback_query.message.reply_text(
            "–í–∏ —â–µ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ. –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø–æ—á–∞—Ç–∫—É –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å ¬´–ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å¬ª —Ç–∞ –≤–∏–∫–æ–Ω–∞–π—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é.",
            reply_markup=main_menu(is_admin=False, is_auth=False),
        )
        return STEP_MENU

    # –ó–∞–ø–∏—Ç—É—î–º–æ —Å—É–º—É –≤–∏–≤–æ–¥—É
    await update.callback_query.message.reply_text(
        "–í–≤–µ–¥—ñ—Ç—å —Å—É–º—É –¥–ª—è –≤–∏–≤–µ–¥–µ–Ω–Ω—è:",
        reply_markup=nav_buttons(),
    )
    return STEP_WITHDRAW_AMOUNT


async def withdraw_amount(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–æ–±–Ω–∏–∫ –≤–≤–æ–¥—É —Å—É–º–∏ –≤–∏–≤–æ–¥—É.
    –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–∞–ª—ñ–¥–Ω—ñ—Å—Ç—å, –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ user_data —ñ –ø–æ–∫–∞–∑—É—î–º–æ –∫–Ω–æ–ø–∫—É –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è.
    """
    text = update.message.text.strip()
    if not text.isdigit() or int(text) <= 0:
        # –ù–µ–≤—ñ—Ä–Ω–∞ —Å—É–º–∞
        await update.message.reply_text(
            "–ù–µ–≤—ñ—Ä–Ω–∞ —Å—É–º–∞. –í–≤–µ–¥—ñ—Ç—å –ø–æ–∑–∏—Ç–∏–≤–Ω–µ —á–∏—Å–ª–æ.",
            reply_markup=nav_buttons(),
        )
        return STEP_WITHDRAW_AMOUNT

    context.user_data["withdraw_amount"] = text

    # –ü–æ–∫–∞–∑—É—î–º–æ –∫–Ω–æ–ø–∫—É ¬´–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏¬ª
    kb = InlineKeyboardMarkup([
        [InlineKeyboardButton("‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –≤–∏–≤—ñ–¥", callback_data="CONFIRM_WITHDRAW")],
        [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥",            callback_data="BACK")],
        [InlineKeyboardButton("üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é",     callback_data="HOME")],
    ])
    await update.message.reply_text(
        f"–í–∏ –±–∞–∂–∞—î—Ç–µ –≤–∏–≤–µ—Å—Ç–∏ {text} –≥—Ä–Ω. –ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å –∑–∞—è–≤–∫—É:",
        reply_markup=kb,
    )
    return STEP_WITHDRAW_CONFIRM


async def withdraw_confirm(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ü—ñ—Å–ª—è –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è ¬´‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –≤–∏–≤—ñ–¥¬ª –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –∞–¥–º—ñ–Ω—É –∑–∞—è–≤—É
    —ñ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –∫–ª—ñ—î–Ω—Ç–∞ –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é.
    """
    await update.callback_query.answer()

    user = update.effective_user
    row = get_user(user.id)
    card = row[1]  # –∑ –ë–î –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ (user_id, card, phone)
    amount = context.user_data.get("withdraw_amount")
    ts = datetime.datetime.now().isoformat(sep=" ", timespec="seconds")

    # –§–æ—Ä–º—É—î–º–æ —Ç–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏
    text = (
        f"üí∏ –í–∏–≤—ñ–¥ –∫–æ—à—Ç—ñ–≤ –≤—ñ–¥ {user.full_name} ({user.id}):\n"
        f"–ö–∞—Ä—Ç–∫–∞ –∫–ª—ñ—î–Ω—Ç–∞: {card}\n"
        f"–°—É–º–∞: {amount} –≥—Ä–Ω\n"
        f"üïí {ts}"
    )
    # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –∞–¥–º—ñ–Ω—É
    await context.bot.send_message(chat_id=ADMIN_ID, text=text)

    # –û—á–∏—â–∞—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω—É —Å—É–º—É
    context.user_data.pop("withdraw_amount", None)

    # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –∫–ª—ñ—î–Ω—Ç–∞ –≤ –º–µ–Ω—é
    await update.callback_query.message.reply_text(
        "–ó–∞—è–≤–∫–∞ –Ω–∞ –≤–∏–≤–µ–¥–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º—ñ–Ω—É.",
        reply_markup=main_menu(is_admin=False, is_auth=True),
    )
    return STEP_MENU
